document	O
:	O
SNIPER	Method
:	O
Efficient	O
Multi	Task
-	Task
Scale	Task
Training	Task
We	O
present	O
SNIPER	Method
,	O
an	O
algorithm	O
for	O
performing	O
efficient	O
multi	Task
-	Task
scale	Task
training	Task
in	O
instance	Task
level	Task
visual	Task
recognition	Task
tasks	Task
.	O
Instead	O
of	O
processing	O
every	O
pixel	O
in	O
an	O
image	O
pyramid	O
,	O
SNIPER	Method
processes	O
context	O
regions	O
around	O
ground	O
-	O
truth	O
instances	O
(	O
referred	O
to	O
as	O
chips	O
)	O
at	O
the	O
appropriate	O
scale	O
.	O
For	O
background	Task
sampling	Task
,	O
these	O
context	O
-	O
regions	O
are	O
generated	O
using	O
proposals	O
extracted	O
from	O
a	O
region	Method
proposal	Method
network	Method
trained	O
with	O
a	O
short	Method
learning	Method
schedule	Method
.	O
Hence	O
,	O
the	O
number	O
of	O
chips	O
generated	O
per	O
image	O
during	O
training	O
adaptively	O
changes	O
based	O
on	O
the	O
scene	O
complexity	O
.	O
SNIPER	Method
only	O
processes	O
30	O
%	O
more	O
pixels	O
compared	O
to	O
the	O
commonly	O
used	O
single	Method
scale	Method
training	Method
at	O
800x1333	O
pixels	O
on	O
the	O
COCO	Material
dataset	Material
.	O
But	O
,	O
it	O
also	O
observes	O
samples	O
from	O
extreme	O
resolutions	O
of	O
the	O
image	O
pyramid	O
,	O
like	O
1400x2000	O
pixels	O
.	O
As	O
SNIPER	Method
operates	O
on	O
resampled	O
low	O
resolution	O
chips	O
(	O
512x512	O
pixels	O
)	O
,	O
it	O
can	O
have	O
a	O
batch	O
size	O
as	O
large	O
as	O
on	O
a	O
single	O
GPU	Method
even	O
with	O
a	O
ResNet	Method
-	Method
101	Method
backbone	Method
.	O
Therefore	O
it	O
can	O
benefit	O
from	O
batch	Method
-	Method
normalization	Method
during	O
training	Task
without	O
the	O
need	O
for	O
synchronizing	O
batch	O
-	O
normalization	O
statistics	O
across	O
GPUs	O
.	O
SNIPER	Method
brings	O
training	O
of	O
instance	Task
level	Task
recognition	Task
tasks	Task
like	O
object	Task
detection	Task
closer	O
to	O
the	O
protocol	O
for	O
image	Task
classification	Task
and	O
suggests	O
that	O
the	O
commonly	O
accepted	O
guideline	O
that	O
it	O
is	O
important	O
to	O
train	O
on	O
high	O
resolution	O
images	O
for	O
instance	Task
level	Task
visual	Task
recognition	Task
tasks	Task
might	O
not	O
be	O
correct	O
.	O
Our	O
implementation	O
based	O
on	O
Faster	Method
-	Method
RCNN	Method
with	O
a	O
ResNet	Method
-	Method
101	Method
backbone	Method
obtains	O
an	O
mAP	Metric
of	O
%	O
on	O
the	O
COCO	Material
dataset	Material
for	O
bounding	Task
box	Task
detection	Task
and	O
can	O
process	O
images	O
per	O
second	O
during	O
inference	Task
with	O
a	O
single	O
GPU	O
.	O
Code	O
is	O
available	O
at	O
.	O
section	O
:	O
Introduction	O
Humans	O
have	O
a	O
foveal	Method
visual	Method
system	Method
which	O
attends	O
to	O
objects	O
at	O
a	O
fixed	O
distance	O
and	O
size	O
.	O
For	O
example	O
,	O
when	O
we	O
focus	O
on	O
nearby	O
objects	O
,	O
far	O
away	O
objects	O
get	O
blurred	O
.	O
Naturally	O
,	O
it	O
is	O
difficult	O
for	O
us	O
to	O
focus	O
on	O
objects	O
of	O
different	O
scales	O
simultaneously	O
.	O
We	O
only	O
process	O
a	O
small	O
field	O
of	O
view	O
at	O
any	O
given	O
point	O
of	O
time	O
and	O
adaptively	O
ignore	O
the	O
remaining	O
visual	O
content	O
in	O
the	O
image	O
.	O
However	O
,	O
computer	Method
algorithms	Method
which	O
are	O
designed	O
for	O
instance	Task
level	Task
visual	Task
recognition	Task
tasks	Task
like	O
object	Task
detection	Task
depart	O
from	O
this	O
natural	O
way	O
of	O
processing	Task
visual	Task
information	Task
.	O
For	O
obtaining	O
a	O
representation	Task
robust	O
to	O
scale	O
,	O
popular	O
detection	Task
algorithms	O
like	O
Faster	Method
-	Method
RCNN	Method
/	O
Mask	Method
-	Method
RCNN	Method
are	O
trained	O
on	O
a	O
multi	O
-	O
scale	O
image	O
pyramid	O
.	O
Since	O
every	O
pixel	O
is	O
processed	O
at	O
each	O
scale	O
,	O
this	O
approach	O
to	O
processing	Task
visual	Task
information	Task
increases	O
the	O
training	Metric
time	Metric
significantly	O
.	O
For	O
example	O
,	O
constructing	O
a	O
scale	O
image	O
pyramid	O
(	O
e.g.	O
scales=	O
x	O
,	O
x	O
,	O
x	O
)	O
requires	O
processing	O
times	O
the	O
number	O
of	O
pixels	O
present	O
in	O
the	O
original	O
image	O
.	O
For	O
this	O
reason	O
,	O
it	O
is	O
impractical	O
to	O
use	O
multi	Method
-	Method
scale	Method
training	Method
in	O
many	O
scenarios	O
.	O
Recently	O
,	O
it	O
is	O
shown	O
that	O
ignoring	O
gradients	O
of	O
objects	O
which	O
are	O
of	O
extreme	O
resolutions	O
is	O
beneficial	O
while	O
using	O
multiple	O
scales	O
during	O
training	O
.	O
For	O
example	O
,	O
when	O
constructing	O
an	O
image	O
pyramid	O
of	O
scales	O
,	O
the	O
gradients	O
of	O
large	O
and	O
small	O
objects	O
should	O
be	O
ignored	O
at	O
large	O
and	O
small	O
resolutions	O
respectively	O
.	O
If	O
this	O
is	O
the	O
case	O
,	O
an	O
intuitive	O
question	O
which	O
arises	O
is	O
,	O
do	O
we	O
need	O
to	O
process	O
the	O
entire	O
image	O
at	O
a	O
x	O
resolution	O
?	O
Would	O
nâ€™t	O
it	O
suffice	O
to	O
sample	O
a	O
much	O
smaller	O
RoI	O
(	O
chip	O
)	O
around	O
small	O
objects	O
at	O
this	O
resolution	O
?	O
On	O
the	O
other	O
hand	O
,	O
if	O
the	O
image	O
is	O
already	O
high	O
resolution	O
,	O
and	O
objects	O
in	O
it	O
are	O
also	O
large	O
in	O
size	O
,	O
is	O
there	O
any	O
benefit	O
in	O
upsampling	O
that	O
image	O
?	O
While	O
ignoring	O
significant	O
portions	O
of	O
the	O
image	O
would	O
save	O
computation	O
,	O
a	O
smaller	O
chip	O
would	O
also	O
lack	O
context	O
required	O
for	O
recognition	Task
.	O
A	O
significant	O
portion	O
of	O
background	O
would	O
also	O
be	O
ignored	O
at	O
a	O
higher	O
resolution	O
.	O
So	O
,	O
there	O
is	O
a	O
trade	O
-	O
off	O
between	O
computation	Metric
,	O
context	O
and	O
negative	Task
mining	Task
while	O
accelerating	O
multi	Task
-	Task
scale	Task
training	Task
.	O
To	O
this	O
end	O
,	O
we	O
present	O
a	O
novel	O
training	Method
algorithm	Method
called	O
Scale	Method
Normalization	Method
for	O
Image	Task
Pyramids	Task
with	O
Efficient	Task
Resampling	Task
(	O
SNIPER	Method
)	O
,	O
which	O
adaptively	O
samples	O
chips	O
from	O
multiple	O
scales	O
of	O
an	O
image	O
pyramid	O
,	O
conditioned	O
on	O
the	O
image	O
content	O
.	O
We	O
sample	O
positive	O
chips	O
conditioned	O
on	O
the	O
ground	O
-	O
truth	O
instances	O
and	O
negative	O
chips	O
based	O
on	O
proposals	O
generated	O
by	O
a	O
region	Method
proposal	Method
network	Method
.	O
Under	O
the	O
same	O
conditions	O
(	O
fixed	O
batch	O
normalization	O
)	O
,	O
we	O
show	O
that	O
SNIPER	Method
performs	O
as	O
well	O
as	O
the	O
multi	Method
-	Method
scale	Method
strategy	Method
proposed	O
in	O
SNIP	Method
while	O
reducing	O
the	O
number	O
of	O
pixels	O
processed	O
by	O
a	O
factor	O
of	O
during	O
training	Task
on	O
the	O
COCO	Material
dataset	Material
.	O
Since	O
SNIPER	Method
is	O
trained	O
on	O
x	O
size	O
chips	O
,	O
it	O
can	O
reap	O
the	O
benefits	O
of	O
a	O
large	O
batch	O
size	O
and	O
training	O
with	O
batch	Method
-	Method
normalization	Method
on	O
a	O
single	O
GPU	O
node	O
.	O
In	O
particular	O
,	O
we	O
can	O
use	O
a	O
batch	O
size	O
of	O
per	O
GPU	O
(	O
leading	O
to	O
a	O
total	O
batch	O
size	O
of	O
160	O
)	O
,	O
even	O
with	O
a	O
ResNet	O
-	O
101	O
based	O
Faster	Method
-	Method
RCNN	Method
detector	O
.	O
While	O
being	O
efficient	O
,	O
SNIPER	Method
obtains	O
competitive	O
performance	O
on	O
the	O
COCO	Material
detection	Task
dataset	O
even	O
with	O
simple	O
detection	Task
architectures	O
like	O
Faster	Method
-	Method
RCNN	Method
.	O
section	O
:	O
Background	O
Deep	O
learning	O
based	O
object	Task
detection	Task
algorithms	O
have	O
primarily	O
evolved	O
from	O
the	O
R	Method
-	Method
CNN	Method
detector	Method
,	O
which	O
started	O
with	O
object	O
proposals	O
generated	O
with	O
an	O
unsupervised	Method
algorithm	Method
,	O
resized	O
these	O
proposals	O
to	O
a	O
canonical	O
x	O
size	O
image	O
and	O
classified	O
them	O
using	O
a	O
convolutional	Method
neural	Method
network	Method
.	O
This	O
model	O
is	O
scale	O
invariant	O
,	O
but	O
the	O
computational	Metric
cost	Metric
for	O
training	Task
and	O
inference	Task
for	O
R	Method
-	Method
CNN	Method
scales	O
linearly	O
with	O
the	O
number	O
of	O
proposals	O
.	O
To	O
alleviate	O
this	O
computational	O
bottleneck	O
,	O
Fast	Method
-	Method
RCNN	Method
proposed	O
to	O
project	O
region	O
proposals	O
to	O
a	O
high	O
level	O
convolutional	O
feature	O
map	O
and	O
use	O
the	O
pooled	O
features	O
as	O
a	O
semantic	Method
representation	Method
for	O
region	Task
proposals	Task
.	O
In	O
this	O
process	O
,	O
the	O
computation	O
is	O
shared	O
for	O
the	O
convolutional	Method
layers	Method
and	O
only	O
lightweight	Method
fully	Method
connected	Method
layers	Method
are	O
applied	O
on	O
each	O
proposal	O
.	O
However	O
,	O
convolution	Method
for	O
objects	O
of	O
different	O
sizes	O
is	O
performed	O
at	O
a	O
single	O
scale	O
,	O
which	O
destroys	O
the	O
scale	O
invariance	O
properties	O
of	O
R	Method
-	Method
CNN	Method
.	O
Hence	O
,	O
inference	Task
at	O
multiple	O
scales	O
is	O
performed	O
and	O
detections	O
from	O
multiple	O
scales	O
are	O
combined	O
by	O
selecting	O
features	O
from	O
a	O
pair	O
of	O
adjacent	O
scales	O
closer	O
to	O
the	O
resolution	O
of	O
the	O
pre	O
-	O
trained	Method
network	Method
.	O
The	O
Fast	Method
-	Method
RCNN	Method
model	Method
has	O
since	O
become	O
the	O
de	O
-	O
facto	O
approach	O
for	O
classifying	Task
region	Task
proposals	Task
as	O
it	O
is	O
fast	O
and	O
also	O
captures	O
more	O
context	O
in	O
its	O
features	O
,	O
which	O
is	O
lacking	O
in	O
RCNN	Method
.	O
It	O
is	O
worth	O
noting	O
that	O
in	O
multi	Task
-	Task
scale	Task
training	Task
,	O
Fast	Method
-	Method
RCNN	Method
upsamples	Method
and	O
downsamples	O
every	O
proposal	O
(	O
whether	O
small	O
or	O
big	O
)	O
in	O
the	O
image	O
.	O
This	O
is	O
unlike	O
R	Method
-	Method
CNN	Method
,	O
where	O
each	O
proposal	O
is	O
resized	O
to	O
a	O
canonical	O
size	O
of	O
x	O
pixels	O
.	O
Large	O
objects	O
are	O
not	O
upsampled	O
and	O
small	O
objects	O
are	O
not	O
downsampled	O
in	O
R	Method
-	Method
CNN	Method
.	O
In	O
this	O
regard	O
,	O
R	Method
-	Method
CNN	Method
more	O
appropriately	O
does	O
not	O
up	O
/	O
downsample	O
every	O
pixel	O
in	O
the	O
image	O
but	O
only	O
in	O
those	O
regions	O
which	O
are	O
likely	O
to	O
contain	O
objects	O
to	O
an	O
appropriate	O
resolution	O
.	O
However	O
,	O
R	Method
-	Method
CNN	Method
does	O
not	O
share	O
the	O
convolutional	O
features	O
for	O
nearby	O
proposals	O
like	O
Fast	Method
-	Method
RCNN	Method
,	O
which	O
makes	O
it	O
slow	O
.	O
To	O
this	O
end	O
,	O
we	O
propose	O
SNIPER	Method
,	O
which	O
retains	O
the	O
benefits	O
of	O
both	O
these	O
approaches	O
by	O
generating	O
scale	O
specific	O
context	O
-	O
regions	O
(	O
chips	O
)	O
that	O
cover	O
maximum	O
proposals	O
at	O
a	O
particular	O
scale	O
.	O
SNIPER	Method
classifies	O
all	O
the	O
proposals	O
inside	O
a	O
chip	O
like	O
Fast	Method
-	Method
RCNN	Method
which	O
enables	O
us	O
to	O
perform	O
efficient	O
classification	Task
of	O
multiple	O
proposals	O
within	O
a	O
chip	O
.	O
As	O
SNIPER	Method
does	O
not	O
upsample	O
the	O
image	O
where	O
there	O
are	O
large	O
objects	O
and	O
also	O
does	O
not	O
process	O
easy	O
background	O
regions	O
,	O
it	O
is	O
significantly	O
faster	O
compared	O
to	O
a	O
Fast	Method
-	Method
RCNN	Method
detector	Method
trained	O
on	O
an	O
image	O
pyramid	O
.	O
SNIP	Method
is	O
also	O
trained	O
on	O
almost	O
all	O
the	O
pixels	O
of	O
the	O
image	O
pyramid	O
(	O
like	O
Fast	Method
-	Method
RCNN	Method
)	O
,	O
although	O
gradients	O
arising	O
from	O
objects	O
of	O
extreme	O
resolutions	O
are	O
ignored	O
.	O
In	O
particular	O
,	O
resolutions	O
of	O
the	O
image	O
pyramid	O
(	O
and	O
pixels	O
)	O
always	O
engage	O
in	O
training	O
and	O
multiple	O
pixel	O
crops	O
are	O
sampled	O
out	O
of	O
the	O
pixel	O
resolution	O
of	O
the	O
image	O
in	O
the	O
finest	O
scale	O
.	O
SNIPER	Method
takes	O
this	O
cropping	Method
procedure	Method
to	O
an	O
extreme	O
level	O
by	O
sampling	O
pixels	O
crops	O
from	O
scales	O
of	O
an	O
image	O
pyramid	O
.	O
At	O
extreme	O
scales	O
(	O
like	O
x	O
)	O
,	O
SNIPER	Method
observes	O
less	O
than	O
one	O
tenth	O
of	O
the	O
original	O
content	O
present	O
in	O
the	O
image	O
!	O
Unfortunately	O
,	O
as	O
SNIPER	Method
chips	O
generated	O
only	O
using	O
ground	O
-	O
truth	O
instances	O
are	O
very	O
small	O
compared	O
to	O
the	O
resolution	O
of	O
the	O
original	O
image	O
,	O
a	O
significant	O
portion	O
of	O
the	O
background	O
does	O
not	O
participate	O
in	O
training	O
.	O
This	O
causes	O
the	O
false	Metric
positive	Metric
rate	Metric
to	O
increase	O
.	O
Therefore	O
,	O
it	O
is	O
important	O
to	O
generate	O
chips	O
for	O
background	O
regions	O
as	O
well	O
.	O
In	O
SNIPER	Method
,	O
this	O
is	O
achieved	O
by	O
randomly	O
sampling	O
a	O
fixed	O
number	O
of	O
chips	O
(	O
maximum	O
of	O
in	O
this	O
paper	O
)	O
from	O
regions	O
which	O
are	O
likely	O
to	O
cover	O
false	O
positives	O
.	O
To	O
find	O
such	O
regions	O
,	O
we	O
train	O
a	O
lightweight	Method
RPN	Method
network	Method
with	O
a	O
short	O
schedule	O
.	O
The	O
proposals	O
of	O
this	O
network	O
are	O
used	O
to	O
generate	O
chips	O
for	O
regions	O
which	O
are	O
likely	O
to	O
contain	O
false	O
positives	O
(	O
this	O
could	O
potentially	O
be	O
replaced	O
with	O
unsupervised	Method
proposals	Method
like	O
EdgeBoxes	Method
as	O
well	O
)	O
.	O
After	O
adding	O
negative	Method
chip	Method
sampling	Method
,	O
the	O
performance	O
of	O
SNIPER	Method
matches	O
SNIP	Method
,	O
but	O
it	O
is	O
times	O
faster	O
!	O
Since	O
we	O
are	O
able	O
to	O
obtain	O
similar	O
performance	O
by	O
observing	O
less	O
than	O
one	O
tenth	O
of	O
the	O
image	O
,	O
it	O
implies	O
that	O
very	O
large	O
context	O
during	O
training	O
is	O
not	O
important	O
for	O
training	O
high	O
-	O
performance	O
detectors	Task
but	O
sampling	O
regions	O
containing	O
hard	O
negatives	O
is	O
.	O
section	O
:	O
SNIPER	Method
We	O
describe	O
the	O
major	O
components	O
of	O
SNIPER	Method
in	O
this	O
section	O
.	O
One	O
is	O
positive	Task
/	Task
negative	Task
chip	Task
mining	Task
and	O
the	O
other	O
is	O
label	Task
assignment	Task
after	O
chips	O
are	O
generated	O
.	O
Finally	O
,	O
we	O
will	O
discuss	O
the	O
benefits	O
of	O
training	O
with	O
SNIPER	Method
.	O
subsection	O
:	O
Chip	Task
Generation	Task
SNIPER	Method
generates	O
chips	O
at	O
multiple	O
scales	O
in	O
the	O
image	O
.	O
For	O
each	O
scale	O
,	O
the	O
image	O
is	O
first	O
re	O
-	O
sized	O
to	O
width	O
(	O
)	O
and	O
height	O
(	O
)	O
.	O
On	O
this	O
canvas	O
,	O
pixel	O
chips	O
are	O
placed	O
at	O
equal	O
intervals	O
of	O
pixels	O
(	O
we	O
set	O
to	O
in	O
this	O
paper	O
)	O
.	O
This	O
leads	O
to	O
a	O
two	O
-	O
dimensional	O
array	O
of	O
chips	O
at	O
each	O
scale	O
.	O
subsection	O
:	O
Positive	Method
Chip	Method
Selection	Method
For	O
each	O
scale	O
,	O
there	O
is	O
a	O
desired	O
area	O
range	O
,	O
which	O
determines	O
which	O
ground	O
-	O
truth	O
boxes	O
/	O
proposals	O
participate	O
in	O
training	O
for	O
each	O
scale	O
.	O
The	O
valid	O
list	O
of	O
ground	O
-	O
truth	O
bounding	O
boxes	O
which	O
lie	O
in	O
are	O
referred	O
to	O
as	O
.	O
Then	O
,	O
chips	O
are	O
greedily	O
selected	O
so	O
that	O
maximum	O
number	O
of	O
valid	O
ground	O
-	O
truth	O
boxes	O
(	O
)	O
are	O
covered	O
.	O
A	O
ground	O
-	O
truth	O
box	O
is	O
said	O
to	O
be	O
covered	O
if	O
it	O
is	O
completely	O
enclosed	O
inside	O
a	O
chip	O
.	O
All	O
the	O
positive	O
chips	O
from	O
a	O
scale	O
are	O
combined	O
per	O
image	O
and	O
are	O
referred	O
to	O
as	O
.	O
For	O
each	O
ground	O
-	O
truth	O
bounding	O
box	O
,	O
there	O
always	O
exists	O
a	O
chip	O
which	O
covers	O
it	O
.	O
Since	O
consecutive	O
contain	O
overlapping	O
intervals	O
,	O
a	O
ground	O
-	O
truth	O
bounding	O
box	O
may	O
be	O
assigned	O
to	O
multiple	O
chips	O
at	O
different	O
scales	O
.	O
It	O
is	O
also	O
possible	O
that	O
the	O
same	O
ground	O
-	O
truth	O
bounding	O
box	O
may	O
be	O
in	O
multiple	O
chips	O
from	O
the	O
same	O
scale	O
.	O
Ground	O
-	O
truth	O
instances	O
which	O
have	O
a	O
partial	O
overlap	O
(	O
IoU	O
>	O
0	O
)	O
with	O
a	O
chip	O
are	O
cropped	O
.	O
All	O
the	O
cropped	O
ground	O
-	O
truth	O
boxes	O
(	O
valid	O
or	O
invalid	O
)	O
are	O
retained	O
in	O
the	O
chip	O
and	O
are	O
used	O
in	O
label	Task
assignment	Task
.	O
In	O
this	O
way	O
,	O
every	O
ground	O
-	O
truth	O
box	O
is	O
covered	O
at	O
the	O
appropriate	O
scale	O
.	O
Since	O
the	O
crop	O
-	O
size	O
is	O
much	O
smaller	O
than	O
the	O
resolution	O
of	O
the	O
image	O
(	O
i.e.	O
more	O
than	O
x	O
smaller	O
for	O
high	O
-	O
resolution	O
images	O
)	O
,	O
SNIPER	Method
does	O
not	O
process	O
most	O
of	O
the	O
background	O
at	O
high	O
-	O
resolutions	O
.	O
This	O
leads	O
to	O
significant	O
savings	O
in	O
computation	Metric
and	Metric
memory	Metric
requirement	Metric
while	O
processing	O
high	Task
-	Task
resolution	Task
images	Task
.	O
We	O
illustrate	O
this	O
with	O
an	O
example	O
shown	O
in	O
Figure	O
[	O
reference	O
]	O
.	O
The	O
left	O
side	O
of	O
the	O
figure	O
shows	O
the	O
image	O
with	O
the	O
ground	O
-	O
truth	O
boxes	O
represented	O
by	O
green	O
bounding	O
boxes	O
.	O
Other	O
colored	O
rectangles	O
on	O
the	O
left	O
side	O
of	O
the	O
figure	O
show	O
the	O
chips	O
generated	O
by	O
SNIPER	Method
in	O
the	O
original	O
image	O
resolution	O
which	O
cover	O
all	O
objects	O
.	O
These	O
chips	O
are	O
illustrated	O
on	O
the	O
right	O
side	O
of	O
the	O
figure	O
with	O
the	O
same	O
border	O
color	O
.	O
Green	O
and	O
red	O
bounding	O
boxes	O
represent	O
the	O
valid	O
and	O
invalid	O
ground	O
-	O
truth	O
objects	O
corresponding	O
to	O
the	O
scale	O
of	O
the	O
chip	O
.	O
As	O
can	O
be	O
seen	O
,	O
in	O
this	O
example	O
,	O
SNIPER	Method
efficiently	O
processes	O
all	O
ground	O
-	O
truth	O
objects	O
in	O
an	O
appropriate	O
scale	O
by	O
forming	O
low	Method
-	Method
resolution	Method
chips	Method
.	O
subsection	O
:	O
Negative	Method
Chip	Method
Selection	Method
Although	O
positive	O
chips	O
cover	O
all	O
the	O
positive	O
instances	O
,	O
a	O
significant	O
portion	O
of	O
the	O
background	O
is	O
not	O
covered	O
by	O
them	O
.	O
Incorrectly	O
classifying	Metric
background	Metric
increases	O
the	O
false	Metric
positive	Metric
rate	Metric
.	O
In	O
current	O
object	Task
detection	Task
algorithms	O
,	O
when	O
multi	Task
-	Task
scale	Task
training	Task
is	O
performed	O
,	O
every	O
pixel	O
in	O
the	O
image	O
is	O
processed	O
at	O
all	O
scales	O
.	O
Although	O
training	O
on	O
all	O
scales	O
reduces	O
the	O
false	Metric
positive	Metric
rate	Metric
,	O
it	O
also	O
increases	O
computation	Metric
.	O
We	O
posit	O
that	O
a	O
significant	O
amount	O
of	O
the	O
background	O
is	O
easy	O
to	O
classify	O
and	O
hence	O
,	O
we	O
can	O
avoid	O
performing	O
any	O
computation	O
in	O
those	O
regions	O
.	O
So	O
,	O
how	O
do	O
we	O
eliminate	O
regions	O
which	O
are	O
easy	O
to	O
classify	O
?	O
A	O
simple	O
approach	O
is	O
to	O
employ	O
object	Method
proposals	Method
to	O
identify	O
regions	O
where	O
objects	O
are	O
likely	O
to	O
be	O
present	O
.	O
After	O
all	O
,	O
our	O
classifier	Method
operates	O
on	O
region	O
proposals	O
and	O
if	O
there	O
are	O
no	O
region	O
proposals	O
in	O
a	O
part	O
of	O
the	O
image	O
,	O
it	O
implies	O
that	O
it	O
is	O
very	O
easy	O
to	O
classify	O
as	O
background	O
.	O
Hence	O
,	O
we	O
can	O
ignore	O
those	O
parts	O
of	O
the	O
image	O
during	O
training	O
.	O
To	O
this	O
end	O
,	O
for	O
negative	Task
chip	Task
mining	Task
,	O
we	O
first	O
train	O
RPN	Method
for	O
a	O
couple	O
of	O
epochs	O
.	O
No	O
negative	O
chips	O
are	O
used	O
for	O
training	O
this	O
network	O
.	O
The	O
task	O
of	O
this	O
network	O
is	O
to	O
roughly	O
guide	O
us	O
in	O
selecting	O
regions	O
which	O
are	O
likely	O
to	O
contain	O
false	O
positives	O
,	O
so	O
it	O
is	O
not	O
necessary	O
for	O
it	O
to	O
be	O
very	O
accurate	O
.	O
This	O
RPN	Method
is	O
used	O
to	O
generate	O
proposals	O
over	O
the	O
entire	O
training	O
set	O
.	O
We	O
assume	O
that	O
if	O
no	O
proposals	O
are	O
generated	O
in	O
a	O
major	O
portion	O
of	O
the	O
image	O
by	O
RPN	Method
,	O
then	O
it	O
is	O
unlikely	O
to	O
contain	O
an	O
object	O
instance	O
.	O
For	O
negative	Task
chip	Task
selection	Task
,	O
for	O
each	O
scale	O
,	O
we	O
first	O
remove	O
all	O
the	O
proposals	O
which	O
have	O
been	O
covered	O
in	O
.	O
Then	O
,	O
for	O
each	O
scale	O
,	O
we	O
greedily	O
select	O
all	O
the	O
chips	O
which	O
cover	O
at	O
least	O
proposals	O
in	O
.	O
This	O
generates	O
a	O
set	O
of	O
negative	O
chips	O
for	O
each	O
scale	O
per	O
image	O
,	O
.	O
During	O
training	Task
,	O
we	O
randomly	O
sample	O
a	O
fixed	O
number	O
of	O
negative	O
chips	O
per	O
epoch	O
(	O
per	O
image	O
)	O
from	O
this	O
pool	O
of	O
negative	O
chips	O
which	O
are	O
generated	O
from	O
all	O
scales	O
,	O
i.e.	O
.	O
Figure	O
[	O
reference	O
]	O
shows	O
examples	O
of	O
the	O
generated	O
negative	O
chips	O
by	O
SNIPER	Method
.	O
The	O
first	O
row	O
shows	O
the	O
image	O
and	O
the	O
ground	O
-	O
truth	O
boxes	O
.	O
In	O
the	O
bottom	O
row	O
,	O
we	O
show	O
the	O
proposals	O
not	O
covered	O
by	O
and	O
the	O
corresponding	O
negative	O
chips	O
generated	O
(	O
the	O
orange	O
boxes	O
)	O
.	O
However	O
,	O
for	O
clarity	O
,	O
we	O
represent	O
each	O
proposal	O
by	O
a	O
red	O
circle	O
in	O
its	O
center	O
.	O
As	O
illustrated	O
,	O
SNIPER	Method
only	O
processes	O
regions	O
which	O
likely	O
contain	O
false	O
positives	O
,	O
leading	O
to	O
faster	O
processing	Metric
time	Metric
.	O
subsection	O
:	O
Label	Task
Assignment	Task
Our	O
network	O
is	O
trained	O
end	O
to	O
end	O
on	O
these	O
chips	O
like	O
Faster	Method
-	Method
RCNN	Method
,	O
i.e.	O
it	O
learns	O
to	O
generate	O
proposals	O
as	O
well	O
as	O
classify	O
them	O
with	O
a	O
single	O
network	O
.	O
While	O
training	O
,	O
proposals	O
generated	O
by	O
RPN	Method
are	O
assigned	O
labels	O
and	O
bounding	O
box	O
targets	O
(	O
for	O
regression	Task
)	O
based	O
on	O
all	O
the	O
ground	O
-	O
truth	O
boxes	O
which	O
are	O
present	O
inside	O
the	O
chip	O
.	O
We	O
do	O
not	O
filter	O
ground	O
-	O
truth	O
boxes	O
based	O
on	O
.	O
Instead	O
,	O
proposals	O
which	O
do	O
not	O
fall	O
in	O
are	O
ignored	O
during	O
training	O
.	O
So	O
,	O
a	O
large	O
ground	O
-	O
truth	O
box	O
which	O
is	O
cropped	O
,	O
could	O
generate	O
a	O
valid	O
proposal	O
which	O
is	O
small	O
.	O
Like	O
Fast	Method
-	Method
RCNN	Method
,	O
we	O
mark	O
any	O
proposal	O
which	O
has	O
an	O
overlap	O
greater	O
than	O
0.5	O
with	O
a	O
ground	O
-	O
truth	O
box	O
as	O
positive	O
and	O
assign	O
bounding	O
-	O
box	O
targets	O
for	O
the	O
proposal	O
.	O
Our	O
network	O
is	O
trained	O
end	O
to	O
end	O
and	O
we	O
generate	O
300	O
proposals	O
per	O
chip	O
.	O
We	O
do	O
not	O
apply	O
any	O
constraint	O
that	O
a	O
fraction	O
of	O
these	O
proposals	O
should	O
be	O
re	O
-	O
sampled	O
as	O
positives	O
,	O
as	O
in	O
Fast	Method
-	Method
RCNN	Method
.	O
We	O
did	O
not	O
use	O
OHEM	Method
for	O
classification	Task
and	O
use	O
a	O
simple	O
softmax	Method
cross	Method
-	Method
entropy	Method
loss	Method
for	O
classification	Task
.	O
For	O
assigning	Task
RPN	Task
labels	Task
,	O
we	O
use	O
valid	O
ground	O
-	O
truth	O
boxes	O
to	O
assign	O
labels	O
and	O
invalid	O
ground	O
-	O
truth	O
boxes	O
to	O
invalidate	O
anchors	O
,	O
as	O
done	O
in	O
SNIP	Method
.	O
subsection	O
:	O
Benefits	O
For	O
training	O
,	O
we	O
randomly	O
sample	O
chips	O
from	O
the	O
whole	O
dataset	O
for	O
generating	O
a	O
batch	O
.	O
On	O
average	O
,	O
we	O
generate	O
chips	O
of	O
size	O
x	O
per	O
image	O
on	O
the	O
COCO	Material
dataset	Material
(	O
including	O
negative	O
chips	O
)	O
when	O
training	O
on	O
three	O
scales	O
(	O
/	O
ms	O
,	O
,	O
)	O
.	O
This	O
is	O
only	O
%	O
more	O
than	O
the	O
number	O
of	O
pixels	O
processed	O
per	O
image	O
when	O
single	Method
scale	Method
training	Method
is	O
performed	O
with	O
an	O
image	O
resolution	O
of	O
x	O
.	O
Since	O
all	O
our	O
images	O
are	O
of	O
the	O
same	O
size	O
,	O
data	O
is	O
much	O
better	O
packed	O
leading	O
to	O
better	O
GPU	O
utilization	O
which	O
easily	O
overcomes	O
the	O
extra	O
%	O
overhead	O
.	O
But	O
more	O
importantly	O
,	O
we	O
reap	O
the	O
benefits	O
of	O
multi	Method
-	Method
scale	Method
training	Method
on	O
3	O
scales	O
,	O
large	O
batch	O
size	O
and	O
training	Task
with	O
batch	Method
-	Method
normalization	Method
without	O
any	O
slowdown	O
in	O
performance	O
on	O
a	O
single	O
8	O
GPU	O
node	O
!	O
.	O
It	O
is	O
commonly	O
believed	O
that	O
high	O
resolution	O
images	O
(	O
e.g.	O
x	O
)	O
are	O
necessary	O
for	O
instance	Task
level	Task
recognition	Task
tasks	Task
.	O
Therefore	O
,	O
for	O
instance	Task
level	Task
recognition	Task
tasks	Task
,	O
it	O
was	O
not	O
possible	O
to	O
train	O
with	O
batch	O
-	O
normalization	O
statistics	O
computed	O
on	O
a	O
single	O
GPU	Method
.	O
Methods	O
like	O
synchronized	Method
batch	Method
-	Method
normalization	Method
or	O
training	Method
on	O
GPUs	Method
have	O
been	O
proposed	O
to	O
alleviate	O
this	O
problem	O
.	O
Synchronized	Method
batch	Method
-	Method
normalization	Method
slows	O
down	O
training	Task
significantly	O
and	O
training	O
on	O
GPUs	Method
is	O
also	O
impractical	O
for	O
most	O
people	O
.	O
Therefore	O
,	O
group	Method
normalization	Method
has	O
been	O
recently	O
proposed	O
so	O
that	O
instance	Task
level	Task
recognition	Task
tasks	Task
can	O
benefit	O
from	O
another	O
form	O
of	O
normalization	Task
in	O
a	O
low	Task
batch	Task
setting	Task
during	O
training	O
.	O
With	O
SNIPER	Method
,	O
we	O
show	O
that	O
the	O
image	Task
resolution	Task
bottleneck	Task
can	O
be	O
alleviated	O
for	O
instance	Task
level	Task
recognition	Task
tasks	Task
.	O
As	O
long	O
as	O
we	O
can	O
cover	O
negatives	O
and	O
use	O
appropriate	O
scale	Method
normalization	Method
methods	Method
,	O
we	O
can	O
train	O
with	O
a	O
large	O
batch	O
size	O
of	O
resampled	O
low	O
resolution	O
chips	O
,	O
even	O
on	O
challenging	O
datasets	O
like	O
COCO	Material
.	O
Our	O
results	O
suggest	O
that	O
context	O
beyond	O
a	O
certain	O
field	O
of	O
view	O
may	O
not	O
be	O
beneficial	O
during	O
training	O
.	O
It	O
is	O
also	O
possible	O
that	O
the	O
effective	O
receptive	O
field	O
of	O
deep	Method
neural	Method
networks	Method
is	O
not	O
large	O
enough	O
to	O
leverage	O
far	O
away	O
pixels	O
in	O
the	O
image	O
,	O
as	O
suggested	O
in	O
.	O
In	O
very	O
large	O
datasets	O
like	O
OpenImagesV4	Material
containing	Material
million	Material
images	Material
,	O
most	O
objects	O
are	O
large	O
and	O
images	O
provided	O
are	O
high	O
resolution	O
(	O
x	O
)	O
,	O
so	O
it	O
is	O
less	O
important	O
to	O
upsample	O
images	O
by	O
.	O
In	O
this	O
case	O
,	O
with	O
SNIPER	Method
,	O
we	O
generate	O
million	O
chips	O
of	O
size	O
x	O
using	O
scales	O
of	O
(	O
/	O
ms	O
,	O
1	O
)	O
.	O
Note	O
that	O
SNIPER	Method
also	O
performs	O
adaptive	Method
downsampling	Method
.	O
Since	O
the	O
scales	O
are	O
smaller	O
,	O
chips	O
would	O
cover	O
more	O
background	O
,	O
due	O
to	O
which	O
the	O
impact	O
of	O
negative	Method
sampling	Method
is	O
diminished	O
.	O
In	O
this	O
case	O
(	O
of	O
positive	Task
chip	Task
selection	Task
)	O
,	O
SNIPER	Method
processes	O
only	O
half	O
the	O
number	O
of	O
pixels	O
compared	O
to	O
naÃ¯ve	O
multi	Method
-	Method
scale	Method
training	Method
on	O
the	O
above	O
mentioned	O
scales	O
in	O
OpenImagesV4	Material
.	O
Due	O
to	O
this	O
,	O
we	O
were	O
able	O
to	O
train	O
Faster	Method
-	Method
RCNN	Method
with	O
a	O
ResNet	Method
-	Method
101	Method
backbone	Method
on	O
million	O
images	O
in	O
just	O
days	O
on	O
a	O
single	O
GPU	O
node	O
!	O
section	O
:	O
Experimental	O
Details	O
We	O
evaluate	O
SNIPER	Method
on	O
the	O
COCO	Material
dataset	Material
for	O
object	Task
detection	Task
.	O
COCO	Material
contains	O
123	O
,	O
000	O
images	O
in	O
the	O
training	O
and	O
validation	O
set	O
and	O
20	O
,	O
288	O
images	O
in	O
the	O
test	O
-	O
dev	O
set	O
.	O
We	O
train	O
on	O
the	O
combined	O
training	O
and	O
validation	O
set	O
and	O
report	O
results	O
on	O
the	O
test	O
-	O
dev	O
set	O
.	O
Since	O
recall	Metric
for	O
proposals	Task
is	O
not	O
provided	O
by	O
the	O
evaluation	O
server	O
,	O
we	O
train	O
on	O
118	O
,	O
000	O
images	O
and	O
report	O
recall	Metric
on	O
the	O
remaining	O
5	O
,	O
000	O
images	O
(	O
commonly	O
referred	O
to	O
as	O
the	O
minival	O
set	O
)	O
.	O
On	O
COCO	Material
,	O
we	O
train	O
SNIPER	Method
with	O
a	O
batch	Metric
-	Metric
size	Metric
of	O
and	O
with	O
a	O
learning	Metric
rate	Metric
of	O
.	O
We	O
use	O
a	O
chip	O
size	O
of	O
pixels	O
.	O
Training	O
scales	O
are	O
set	O
to	O
(	O
/	O
ms	O
,	O
,	O
)	O
where	O
is	O
the	O
maximum	O
value	O
width	O
and	O
height	O
of	O
the	O
image	O
.	O
The	O
desired	O
area	O
ranges	O
(	O
i.e.	O
)	O
are	O
set	O
to	O
(	O
,	O
)	O
,	O
(	O
,	O
)	O
,	O
and	O
(	O
,	O
)	O
for	O
each	O
of	O
the	O
scales	O
respectively	O
.	O
Training	Method
is	O
performed	O
for	O
a	O
total	O
of	O
epochs	O
with	O
step	O
-	O
down	O
at	O
the	O
end	O
of	O
epoch	O
.	O
Image	Task
flipping	Task
is	O
used	O
as	O
a	O
data	Method
-	Method
augmentation	Method
technique	Method
.	O
Every	O
epoch	O
requires	O
11	O
,	O
000	O
iterations	O
.	O
For	O
training	O
RPN	Task
without	Task
negatives	Task
,	O
each	O
epoch	O
requires	O
7000	O
iterations	O
.	O
We	O
use	O
RPN	Method
for	O
generating	O
negative	O
chips	O
and	O
train	O
it	O
for	O
epochs	O
with	O
a	O
fixed	O
learning	Metric
rate	Metric
of	O
without	O
any	O
step	O
-	O
down	O
.	O
Therefore	O
,	O
training	O
RPN	Method
for	O
epochs	O
requires	O
less	O
than	O
%	O
of	O
the	O
total	O
training	Metric
time	Metric
.	O
RPN	Method
proposals	Method
are	O
extracted	O
from	O
all	O
scales	O
.	O
Note	O
that	O
inference	Task
takes	O
the	O
time	O
for	O
a	O
full	O
forward	O
-	O
backward	O
pass	O
and	O
we	O
do	O
not	O
perform	O
any	O
flipping	O
for	O
extracting	Task
proposals	Task
.	O
Hence	O
,	O
this	O
process	O
is	O
also	O
efficient	O
.	O
We	O
use	O
mixed	Method
precision	Method
training	Method
as	O
described	O
in	O
.	O
To	O
this	O
end	O
,	O
we	O
re	O
-	O
scale	O
weight	O
-	O
decay	O
by	O
,	O
drop	O
the	O
learning	Metric
rate	Metric
by	O
and	O
rescale	O
gradients	O
by	O
.	O
This	O
ensures	O
that	O
we	O
can	O
train	O
with	O
activations	O
of	O
half	O
precision	O
(	O
and	O
hence	O
x	O
larger	O
batch	O
size	O
)	O
without	O
any	O
loss	O
in	O
accuracy	Metric
.	O
We	O
use	O
fp32	O
weights	O
for	O
the	O
first	O
convolution	Method
layer	Method
,	O
last	Method
convolution	Method
layer	Method
in	O
RPN	Method
(	O
classification	Task
and	Task
regression	Task
)	O
and	O
the	O
fully	Method
connected	Method
layers	Method
in	O
Faster	Method
-	Method
RCNN	Method
.	O
We	O
evaluate	O
SNIPER	Method
using	O
a	O
popular	O
detector	Method
,	O
Faster	Method
-	Method
RCNN	Method
with	O
ResNets	Method
and	O
MobileNetV2	Material
.	O
Proposals	O
are	O
generated	O
using	O
RPN	Method
on	O
top	O
of	O
conv4	O
features	O
and	O
classification	Task
is	O
performed	O
after	O
concatenating	O
conv4	O
and	O
conv5	O
features	O
.	O
In	O
the	O
conv5	O
branch	O
,	O
we	O
use	O
deformable	Method
convolutions	Method
and	O
a	O
stride	O
of	O
.	O
We	O
use	O
a	O
dimensional	Method
feature	Method
map	Method
in	O
RPN	Method
.	O
For	O
the	O
classification	Task
branch	Task
,	O
we	O
first	O
project	O
the	O
concatenated	O
feature	O
map	O
to	O
dimensions	O
and	O
then	O
add	O
fully	Method
connected	Method
layers	Method
with	O
hidden	O
units	O
.	O
For	O
lightweight	Task
networks	Task
like	O
MobileNetv2	Method
,	O
to	O
preserve	O
the	O
computational	Metric
processing	Metric
power	Metric
of	O
the	O
network	O
,	O
we	O
did	O
not	O
make	O
any	O
architectural	O
changes	O
to	O
the	O
network	O
like	O
changing	O
the	O
stride	O
of	O
the	O
network	O
or	O
added	O
deformable	Method
convolutions	Method
.	O
We	O
reduced	O
the	O
RPN	O
dimension	O
to	O
and	O
size	O
of	O
fc	O
layers	O
to	O
from	O
.	O
RPN	Method
and	O
classification	Method
branch	Method
are	O
both	O
applied	O
on	O
the	O
layer	O
with	O
stride	O
for	O
MobileNetv2	Method
.	O
SNIPER	Method
generates	O
million	O
chips	O
for	O
the	O
COCO	Material
dataset	Material
after	O
the	O
images	O
are	O
flipped	O
.	O
This	O
results	O
in	O
around	O
chips	O
per	O
image	O
.	O
In	O
some	O
images	O
which	O
contain	O
many	O
object	O
instances	O
,	O
SNIPER	Method
can	O
generate	O
as	O
many	O
as	O
chips	O
and	O
others	O
where	O
there	O
is	O
a	O
single	O
large	O
salient	O
object	O
,	O
it	O
would	O
only	O
generate	O
a	O
single	O
chip	O
.	O
In	O
a	O
sense	O
,	O
it	O
reduces	O
the	O
imbalance	O
in	O
gradients	O
propagated	O
to	O
an	O
instance	O
level	O
which	O
is	O
present	O
in	O
detectors	Method
which	O
are	O
trained	O
on	O
full	O
resolution	O
images	O
.	O
At	O
least	O
in	O
theory	O
,	O
training	O
on	O
full	O
resolution	O
images	O
is	O
biased	O
towards	O
large	O
object	O
instances	O
.	O
subsection	O
:	O
Recall	O
Analysis	O
We	O
observe	O
that	O
recall	Metric
(	O
averaged	O
over	O
multiple	O
overlap	O
thresholds	O
0.5:0.05:0.95	O
)	O
for	O
RPN	Method
does	O
not	O
decrease	O
if	O
we	O
do	O
not	O
perform	O
negative	Method
sampling	Method
.	O
This	O
is	O
because	O
recall	Metric
does	O
not	O
account	O
for	O
false	O
positives	O
.	O
As	O
shown	O
in	O
Section	O
[	O
reference	O
]	O
,	O
this	O
is	O
in	O
contrast	O
to	O
mAP	Metric
for	O
detection	Task
in	O
which	O
negative	Task
sampling	Task
plays	O
an	O
important	O
role	O
.	O
Moreover	O
,	O
in	O
positive	Task
chip	Task
sampling	Task
,	O
we	O
do	O
cover	O
every	O
ground	O
truth	O
sample	O
.	O
Therefore	O
,	O
for	O
generating	Task
proposals	Task
,	O
it	O
is	O
sufficient	O
to	O
train	O
on	O
just	O
positive	O
samples	O
.	O
This	O
result	O
further	O
bolsters	O
SNIPER	Method
â€™s	O
strategy	O
of	O
finding	O
negatives	O
based	O
on	O
an	O
RPN	Method
in	O
which	O
the	O
training	O
is	O
performed	O
just	O
on	O
positive	O
samples	O
.	O
subsection	O
:	O
Negative	Task
Chip	Task
Mining	Task
and	O
Scale	Task
SNIPER	Method
uses	O
negative	Method
chip	Method
mining	Method
to	O
reduce	O
the	O
false	Metric
positive	Metric
rate	Metric
while	O
speeding	O
up	O
the	O
training	Task
by	O
skipping	O
the	O
easy	O
regions	O
inside	O
the	O
image	O
.	O
As	O
proposed	O
in	O
Section	O
[	O
reference	O
]	O
,	O
we	O
use	O
a	O
region	Method
proposal	Method
network	Method
trained	O
with	O
a	O
short	Method
learning	Method
schedule	Method
to	O
find	O
such	O
regions	O
.	O
To	O
evaluate	O
the	O
effectiveness	O
of	O
our	O
negative	Method
mining	Method
approach	Method
,	O
we	O
compare	O
SNIPER	Metric
â€™s	Metric
mean	Metric
average	Metric
precision	Metric
with	O
a	O
slight	O
variant	O
which	O
only	O
uses	O
positive	O
chips	O
during	O
training	O
(	O
denoted	O
as	O
SNIPER	Method
w	O
/	O
o	O
neg	O
)	O
.	O
All	O
other	O
parameters	O
remain	O
the	O
same	O
.	O
Table	O
[	O
reference	O
]	O
compares	O
the	O
performance	O
of	O
these	O
models	O
.	O
The	O
proposed	O
negative	Method
chip	Method
mining	Method
approach	Method
noticeably	O
improves	O
AP	Metric
for	O
all	O
localization	Metric
thresholds	Metric
and	O
object	O
sizes	O
.	O
Noticeably	O
,	O
negative	Method
chip	Method
mining	Method
improves	O
the	O
average	Metric
precision	Metric
from	O
to	O
.	O
This	O
is	O
in	O
contrast	O
to	O
the	O
last	O
section	O
where	O
we	O
were	O
evaluating	O
proposals	O
.	O
This	O
is	O
because	O
mAP	Metric
is	O
affected	O
by	O
false	O
positives	O
.	O
If	O
we	O
do	O
not	O
include	O
regions	O
in	O
the	O
image	O
containing	O
negatives	O
which	O
are	O
similar	O
in	O
appearance	O
to	O
positive	O
instances	O
,	O
it	O
would	O
increase	O
our	O
false	Metric
positive	Metric
rate	Metric
and	O
adversely	O
affect	O
detection	Task
performance	O
.	O
SNIPER	Method
is	O
an	O
efficient	O
multi	Method
-	Method
scale	Method
training	Method
algorithm	Method
.	O
In	O
all	O
experiments	O
in	O
this	O
paper	O
we	O
use	O
the	O
aforementioned	O
three	O
scales	O
(	O
See	O
Section	O
[	O
reference	O
]	O
for	O
the	O
details	O
)	O
.	O
To	O
show	O
that	O
SNIPER	Method
effectively	O
benefits	O
from	O
multi	Method
-	Method
scale	Method
training	Method
,	O
we	O
reduce	O
the	O
number	O
of	O
scales	O
from	O
to	O
by	O
dropping	O
the	O
high	O
resolution	O
scale	O
.	O
Table	O
[	O
reference	O
]	O
shows	O
the	O
mean	O
average	Metric
precision	Metric
for	O
SNIPER	Method
under	O
these	O
two	O
settings	O
.	O
As	O
can	O
be	O
seen	O
,	O
by	O
reducing	O
the	O
number	O
of	O
scales	O
,	O
the	O
performance	O
consistently	O
drops	O
by	O
a	O
large	O
margin	O
on	O
all	O
evaluation	Metric
metrics	Metric
.	O
subsection	O
:	O
Timing	O
It	O
takes	O
14	O
hours	O
to	O
train	O
SNIPER	Method
end	O
to	O
end	O
on	O
a	O
8	O
GPU	Method
V100	Method
node	Method
with	O
a	O
Faster	Method
-	Method
RCNN	Method
detector	O
which	O
has	O
a	O
ResNet	O
-	O
101	O
backbone	O
.	O
It	O
is	O
worth	O
noting	O
that	O
we	O
train	O
on	O
3	O
scales	O
of	O
an	O
image	O
pyramid	O
(	O
max	O
size	O
of	O
512	O
,	O
1.667	O
and	O
3	O
)	O
.	O
Training	O
RPN	Method
is	O
much	O
more	O
efficient	O
and	O
it	O
only	O
takes	O
2	O
hours	O
for	O
pre	Task
-	Task
training	Task
.	O
Not	O
only	O
is	O
SNIPER	Method
efficient	O
in	O
training	Task
,	O
it	O
can	O
also	O
process	O
around	O
5	O
images	O
per	O
second	O
on	O
a	O
single	O
V100	O
GPU	O
.	O
For	O
better	O
utilization	O
of	O
resources	O
,	O
we	O
run	O
multiple	O
processes	O
in	O
parallel	O
during	O
inference	Task
and	O
compute	O
the	O
average	Metric
time	Metric
it	O
takes	O
to	O
process	O
a	O
batch	O
of	O
100	O
images	O
.	O
subsection	O
:	O
Inference	Task
We	O
perform	O
inference	Task
on	O
an	O
image	O
pyramid	O
and	O
scale	O
the	O
original	O
image	O
to	O
the	O
following	O
resolutions	O
(	O
,	O
)	O
,	O
(	O
,	O
)	O
and	O
(	O
,	O
)	O
.	O
The	O
first	O
element	O
is	O
the	O
minimum	O
size	O
with	O
the	O
condition	O
that	O
the	O
maximum	O
size	O
does	O
not	O
exceed	O
the	O
second	O
element	O
.	O
The	O
valid	O
ranges	O
for	O
training	O
and	O
inference	Task
are	O
similar	O
to	O
SNIP	Method
.	O
For	O
combining	O
the	O
detections	O
,	O
we	O
use	O
Soft	Method
-	Method
NMS	Method
.	O
We	O
do	O
not	O
perform	O
flipping	O
,	O
iterative	Method
bounding	Method
box	Method
regression	Method
or	O
mask	Method
tightening	Method
.	O
subsection	O
:	O
Comparison	O
with	O
State	O
-	O
of	O
-	O
the	O
-	O
art	O
It	O
is	O
difficult	O
to	O
fairly	O
compare	O
different	O
detectors	O
as	O
they	O
differ	O
in	O
backbone	Method
architectures	Method
(	O
like	O
ResNet	Method
,	O
ResNext	O
,	O
Xception	Method
)	O
,	O
pre	O
-	O
training	O
data	O
(	O
e.g.	O
ImageNet	Material
-	Material
5k	Material
,	O
JFT	Material
,	O
OpenImages	Material
)	O
,	O
different	O
structures	O
in	O
the	O
underlying	O
network	O
(	O
e.g	O
multi	O
-	O
scale	O
features	O
,	O
deformable	O
convolutions	O
,	O
heavier	O
heads	O
,	O
anchor	O
sizes	O
,	O
path	Method
aggregation	Method
)	O
,	O
test	O
time	O
augmentations	O
like	O
flipping	O
,	O
mask	O
tightening	O
,	O
iterative	Method
bounding	Method
box	Method
regression	Method
etc	O
.	O
Therefore	O
,	O
we	O
compare	O
our	O
results	O
with	O
SNIP	Method
,	O
which	O
is	O
a	O
recent	O
method	O
for	O
training	O
object	Task
detectors	Task
on	O
an	O
image	Task
pyramid	Task
.	O
The	O
results	O
are	O
presented	O
in	O
Table	O
[	O
reference	O
]	O
.	O
Without	O
using	O
batch	Method
normalization	Method
,	O
SNIPER	Method
achieves	O
comparable	O
results	O
.	O
While	O
SNIP	Method
processes	O
almost	O
all	O
the	O
image	O
pyramid	O
,	O
SNIPER	Method
on	O
the	O
other	O
hand	O
,	O
reduces	O
the	O
computational	Metric
cost	Metric
by	O
skipping	O
easy	O
regions	O
.	O
Moreover	O
,	O
since	O
SNIPER	Method
operates	O
on	O
a	O
lower	O
resolution	O
input	O
,	O
it	O
reduces	O
the	O
memory	O
footprint	O
.	O
This	O
allows	O
us	O
to	O
increase	O
the	O
batch	O
size	O
and	O
unlike	O
SNIP	Method
,	O
we	O
can	O
benefit	O
from	O
batch	Method
normalization	Method
during	O
training	Task
.	O
With	O
batch	Method
normalization	Method
,	O
SNIPER	Method
significantly	O
outperforms	O
SNIP	Method
in	O
all	O
metrics	O
.	O
It	O
should	O
be	O
noted	O
that	O
not	O
only	O
the	O
proposed	O
method	O
is	O
more	O
accurate	O
,	O
it	O
is	O
also	O
faster	O
during	O
training	Task
.	O
To	O
the	O
best	O
of	O
our	O
knowledge	O
,	O
for	O
a	O
Faster	Method
-	Method
RCNN	Method
architecture	O
with	O
a	O
ResNet	Method
-	Method
101	Method
backbone	Method
(	O
with	O
deformable	Method
convolutions	Method
)	O
,	O
our	O
reported	O
result	O
of	O
46.1	O
%	O
is	O
state	O
-	O
of	O
-	O
the	O
-	O
art	O
.	O
This	O
result	O
improves	O
to	O
46.8	O
%	O
if	O
we	O
pre	O
-	O
train	O
the	O
detector	Method
on	O
the	O
OpenImagesV4	Material
dataset	Material
.	O
Adding	O
an	O
instance	Method
segmentation	Method
head	Method
and	O
training	O
the	O
detection	Task
network	O
along	O
with	O
it	O
improves	O
the	O
performance	O
to	O
47.6	O
%	O
.	O
With	O
our	O
efficient	O
batch	Method
inference	Method
pipeline	Method
,	O
we	O
can	O
process	O
5	O
images	O
per	O
second	O
on	O
a	O
single	O
V100	O
GPU	O
and	O
still	O
obtain	O
an	O
mAP	Metric
of	O
47.6	O
%	O
.	O
This	O
implies	O
that	O
on	O
modern	O
GPUs	Method
,	O
it	O
is	O
practical	O
to	O
perform	O
inference	Task
on	O
an	O
image	Task
pyramid	Task
which	O
includes	O
high	O
resolutions	O
like	O
1400x2000	O
.	O
We	O
also	O
show	O
results	O
for	O
Faster	Method
-	Method
RCNN	Method
trained	O
with	O
MobileNetV2	Material
.	O
It	O
obtains	O
an	O
mAP	Metric
of	O
34.1	O
%	O
compared	O
to	O
the	O
SSDLite	Method
version	Method
which	O
obtained	O
22.1	O
%	O
.	O
This	O
again	O
highlights	O
the	O
importance	O
of	O
image	O
pyramids	O
(	O
and	O
SNIPER	Method
training	O
)	O
as	O
we	O
can	O
improve	O
the	O
performance	O
of	O
the	O
detector	O
by	O
12	O
%	O
.	O
We	O
also	O
show	O
results	O
for	O
instance	Task
segmentation	Task
.	O
The	O
network	Method
architecture	Method
is	O
same	O
as	O
Mask	Method
-	Method
RCNN	Method
,	O
just	O
that	O
we	O
do	O
not	O
use	O
FPN	Method
and	O
use	O
the	O
same	O
detection	Task
architecture	O
which	O
was	O
described	O
for	O
object	Task
detection	Task
.	O
For	O
multi	Task
-	Task
tasking	Task
,	O
we	O
tried	O
two	O
variants	O
of	O
loss	Method
functions	Method
for	O
training	O
the	O
mask	O
branch	O
.	O
One	O
was	O
a	O
foreground	Method
-	Method
background	Method
softmax	Method
function	Method
for	O
N	O
classes	O
and	O
another	O
was	O
a	O
N	Method
+	Method
1	Method
way	Method
softmax	Method
function	Method
.	O
For	O
instance	Task
segmentation	Task
,	O
the	O
network	O
which	O
is	O
trained	O
with	O
2	O
-	O
way	O
Softmax	O
loss	O
for	O
each	O
class	O
clearly	O
performs	O
better	O
.	O
But	O
,	O
for	O
object	Task
detection	Task
,	O
the	O
N	Method
+	Method
1	Method
way	Method
Softmax	Method
loss	Method
leads	O
to	O
slightly	O
better	O
results	O
.	O
We	O
only	O
use	O
3	O
scales	O
during	O
inference	Task
and	O
do	O
not	O
perform	O
flipping	O
,	O
mask	O
tightening	O
,	O
iterative	Method
bounding	Method
-	Method
box	Method
regression	Method
,	O
padding	O
masks	O
before	O
resizing	O
etc	O
.	O
Our	O
instance	Task
segmentation	Task
results	O
are	O
preliminary	O
and	O
we	O
have	O
only	O
trained	O
2	O
models	O
so	O
far	O
.	O
section	O
:	O
Related	O
Work	O
SNIPER	Method
benefits	O
from	O
multiple	O
techniques	O
which	O
were	O
developed	O
over	O
the	O
last	O
year	O
.	O
Notably	O
,	O
it	O
was	O
shown	O
that	O
it	O
is	O
important	O
to	O
train	O
with	O
batch	O
normalization	O
statistics	O
for	O
tasks	O
like	O
object	Task
detection	Task
and	O
semantic	Task
segmentation	Task
.	O
This	O
is	O
one	O
important	O
reason	O
for	O
SNIPER	Method
â€™s	O
better	O
performance	O
.	O
SNIPER	Method
also	O
benefits	O
from	O
a	O
large	O
batch	O
size	O
which	O
was	O
shown	O
to	O
be	O
effective	O
for	O
object	Task
detection	Task
.	O
Like	O
SNIP	Method
,	O
SNIPER	Method
ignores	O
gradients	O
of	O
objects	O
at	O
extreme	O
scales	O
in	O
the	O
image	O
pyramid	O
to	O
improve	O
multi	Task
-	Task
scale	Task
training	Task
.	O
In	O
the	O
past	O
,	O
many	O
different	O
methods	O
have	O
been	O
proposed	O
to	O
understand	O
the	O
role	O
of	O
context	O
,	O
scale	O
and	O
sampling	O
.	O
Considerable	O
importance	O
has	O
been	O
given	O
to	O
leveraging	O
features	O
of	O
different	O
layers	O
of	O
the	O
network	O
and	O
designing	O
architectures	O
for	O
explicitly	O
encoding	O
context	O
/	O
multi	O
-	O
scale	O
information	O
for	O
classification	Task
.	O
Our	O
results	O
highlight	O
that	O
context	O
may	O
not	O
be	O
very	O
important	O
for	O
training	O
high	O
performance	O
object	Task
detectors	Task
.	O
section	O
:	O
Conclusion	O
and	O
Future	O
Work	O
We	O
presented	O
an	O
algorithm	O
for	O
efficient	O
multi	Task
-	Task
scale	Task
training	Task
which	O
sampled	O
low	O
resolution	O
chips	O
from	O
a	O
multi	O
-	O
scale	O
image	O
pyramid	O
to	O
accelerate	O
multi	Task
-	Task
scale	Task
training	Task
by	O
a	O
factor	O
of	O
3	O
times	O
.	O
In	O
doing	O
so	O
,	O
SNIPER	Method
did	O
not	O
compromise	O
on	O
the	O
performance	O
of	O
the	O
detector	O
due	O
to	O
effective	O
sampling	Method
techniques	Method
for	O
positive	O
and	O
negative	O
chips	O
.	O
As	O
SNIPER	Method
operates	O
on	O
re	O
-	O
sampled	O
low	O
resolution	O
chips	O
,	O
it	O
can	O
be	O
trained	O
with	O
a	O
large	O
batch	O
size	O
on	O
a	O
single	O
GPU	Method
which	O
brings	O
it	O
closer	O
to	O
the	O
protocol	O
for	O
training	O
image	Task
classification	Task
.	O
This	O
is	O
in	O
contrast	O
with	O
the	O
common	O
practice	O
of	O
training	O
on	O
high	O
resolution	O
images	O
for	O
instance	Task
-	Task
level	Task
recognition	Task
tasks	Task
.	O
In	O
future	O
,	O
we	O
would	O
like	O
to	O
accelerate	O
multi	Task
-	Task
scale	Task
inference	Task
,	O
because	O
a	O
significant	O
portion	O
of	O
the	O
background	O
can	O
be	O
eliminated	O
without	O
performing	O
expensive	O
computation	O
.	O
It	O
would	O
also	O
be	O
interesting	O
to	O
evaluate	O
at	O
what	O
chip	O
resolution	O
does	O
context	O
start	O
to	O
hurt	O
the	O
performance	O
of	O
object	Method
detectors	Method
.	O
section	O
:	O
Acknowledgement	O
The	O
authors	O
would	O
like	O
to	O
thank	O
an	O
Amazon	O
Machine	Method
Learning	Method
gift	O
for	O
the	O
AWS	O
credits	O
used	O
for	O
this	O
research	O
.	O
The	O
research	O
is	O
based	O
upon	O
work	O
supported	O
by	O
the	O
Office	O
of	O
the	O
Director	O
of	O
National	O
Intelligence	O
(	O
ODNI	O
)	O
,	O
Intelligence	O
Advanced	O
Research	O
Projects	O
Activity	O
(	O
IARPA	O
)	O
,	O
via	O
DOI	O
/	O
IBC	O
Contract	O
Numbers	O
D17PC00287	O
and	O
D17PC00345	O
.	O
The	O
U.S.	O
Government	O
is	O
authorized	O
to	O
reproduce	O
and	O
distribute	O
reprints	O
for	O
Governmental	O
purposes	O
not	O
withstanding	O
any	O
copyright	O
annotation	O
thereon	O
.	O
Disclaimer	O
:	O
The	O
views	O
and	O
conclusions	O
contained	O
herein	O
are	O
those	O
of	O
the	O
authors	O
and	O
should	O
not	O
be	O
interpreted	O
as	O
necessarily	O
representing	O
the	O
official	O
policies	O
or	O
endorsements	O
,	O
either	O
expressed	O
or	O
implied	O
of	O
IARPA	O
,	O
DOI	O
/	O
IBC	O
or	O
the	O
U.S.	O
Government	O
.	O
bibliography	O
:	O
References	O
