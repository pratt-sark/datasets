document	O
:	O
CornerNet	Method
-	O
Lite	O
:	O
Efficient	O
Keypoint	Task
Based	Task
Object	Task
Detection	Task
Keypoint	Method
-	Method
based	Method
methods	Method
are	O
a	O
relatively	O
new	O
paradigm	O
in	O
object	Task
detection	Task
,	O
eliminating	O
the	O
need	O
for	O
anchor	O
boxes	O
and	O
offering	O
a	O
simplified	O
detection	Method
framework	Method
.	O

Keypoint	O
-	O
based	O
CornerNet	Method
achieves	O
state	O
of	O
the	O
art	O
accuracy	Metric
among	O
single	Method
-	Method
stage	Method
detectors	Method
.	O

However	O
,	O
this	O
accuracy	Metric
comes	O
at	O
high	O
processing	Metric
cost	Metric
.	O

In	O
this	O
work	O
,	O
we	O
tackle	O
the	O
problem	O
of	O
efficient	O
keypoint	Task
-	Task
based	Task
object	Task
detection	Task
and	O
introduce	O
CornerNet	Method
-	O
Lite	O
.	O

CornerNet	Method
-	O
Lite	O
is	O
a	O
combination	O
of	O
two	O
efficient	O
variants	O
of	O
CornerNet	Method
:	O
CornerNet	Method
-	Method
Saccade	Method
,	O
which	O
uses	O
an	O
attention	Method
mechanism	Method
to	O
eliminate	O
the	O
need	O
for	O
exhaustively	O
processing	O
all	O
pixels	O
of	O
the	O
image	O
,	O
and	O
CornerNet	Method
-	Method
Squeeze	Method
,	O
which	O
introduces	O
a	O
new	O
compact	Method
backbone	Method
architecture	Method
.	O

Together	O
these	O
two	O
variants	O
address	O
the	O
two	O
critical	O
use	O
cases	O
in	O
efficient	O
object	Task
detection	Task
:	O
improving	O
efficiency	Metric
without	O
sacrificing	O
accuracy	Metric
,	O
and	O
improving	O
accuracy	Metric
at	O
real	Metric
-	Metric
time	Metric
efficiency	Metric
.	O

CornerNet	Method
-	Method
Saccade	Method
is	O
suitable	O
for	O
offline	Task
processing	Task
,	O
improving	O
the	O
efficiency	O
of	O
CornerNet	Method
by	O
6.0x	O
and	O
the	O
AP	Metric
by	O
1.0	O
%	O
on	O
COCO	Material
.	O

CornerNet	Method
-	Method
Squeeze	Method
is	O
suitable	O
for	O
real	Task
-	Task
time	Task
detection	Task
,	O
improving	O
both	O
the	O
efficiency	Metric
and	O
accuracy	Metric
of	O
the	O
popular	O
real	Method
-	Method
time	Method
detector	Method
YOLOv3	Method
(	O
34.4	O
%	O
AP	Metric
at	O
34ms	O
for	O
CornerNet	Method
-	Method
Squeeze	Method
compared	O
to	O
33.0	O
%	O
AP	Metric
at	O
39ms	O
for	O
YOLOv3	Method
on	O
COCO	Material
)	O
.	O

Together	O
these	O
contributions	O
for	O
the	O
first	O
time	O
reveal	O
the	O
potential	O
of	O
keypoint	Task
-	Task
based	Task
detection	Task
to	O
be	O
useful	O
for	O
applications	O
requiring	O
processing	Task
efficiency	Task
.	O

⌊⌋	O
section	O
:	O
Introduction	O
Keypoint	Task
-	Task
based	Task
object	Task
detection	Task
is	O
a	O
class	O
of	O
methods	O
that	O
generate	O
object	O
bounding	O
boxes	O
by	O
detecting	O
and	O
grouping	O
their	O
keypoints	O
.	O

CornerNet	Method
,	O
the	O
state	O
-	O
of	O
-	O
the	O
-	O
art	O
among	O
them	O
,	O
detects	O
and	O
groups	O
the	O
top	O
-	O
left	O
and	O
bottom	O
-	O
right	O
corners	O
of	O
bounding	O
boxes	O
;	O
it	O
uses	O
a	O
stacked	Method
hourglass	Method
network	Method
to	O
predict	O
the	O
heatmaps	O
of	O
the	O
corners	O
and	O
then	O
uses	O
associate	Method
embeddings	Method
to	O
group	O
them	O
.	O

CornerNet	Method
allows	O
a	O
simplified	O
design	O
that	O
eliminates	O
the	O
need	O
for	O
anchor	O
boxes	O
,	O
and	O
has	O
achieved	O
state	O
-	O
of	O
-	O
the	O
-	O
art	O
accuracy	Metric
on	O
COCO	Material
among	O
single	Method
-	Method
stage	Method
detectors	Method
.	O

However	O
,	O
a	O
major	O
drawback	O
of	O
CornerNet	Method
is	O
its	O
inference	Metric
speed	Metric
.	O

It	O
achieves	O
an	O
average	Metric
precision	Metric
(	O
AP	Metric
)	O
of	O
42.2	O
%	O
on	O
COCO	Material
at	O
an	O
inference	Metric
cost	Metric
of	O
1.147s	O
per	O
image	O
,	O
which	O
is	O
too	O
slow	O
for	O
video	Task
applications	Task
that	O
require	O
real	O
-	O
time	O
or	O
interactive	O
rates	O
.	O

Although	O
one	O
can	O
easily	O
speed	O
up	O
inference	Task
by	O
reducing	O
the	O
number	O
of	O
pixels	O
processed	O
(	O
e.g.	O
by	O
reducing	O
the	O
number	O
of	O
scales	O
of	O
processing	O
or	O
the	O
image	O
resolution	O
)	O
,	O
this	O
can	O
cause	O
a	O
large	O
accuracy	Metric
drop	Metric
.	O

For	O
example	O
,	O
single	Method
-	Method
scale	Method
processing	Method
combined	O
with	O
reducing	O
the	O
input	O
resolution	O
can	O
speed	O
up	O
the	O
inference	Task
of	O
CornerNet	Method
to	O
42ms	O
per	O
image	O
,	O
comparable	O
to	O
the	O
39ms	O
of	O
the	O
popular	O
fast	Method
detector	Method
YOLOv3	Method
,	O
but	O
would	O
decrease	O
the	O
AP	Metric
to	O
25.6	O
%	O
which	O
is	O
much	O
lower	O
than	O
YOLOv3	O
’s	O
33.0	O
%	O
.	O

This	O
makes	O
CornerNet	Method
less	O
competitive	O
with	O
alternatives	O
in	O
terms	O
of	O
the	O
accuracy	Metric
-	Metric
efficiency	Metric
tradeoff	Metric
.	O

In	O
this	O
paper	O
we	O
seek	O
to	O
improve	O
the	O
inference	Metric
efficiency	Metric
of	O
CornerNet	Method
.	O

The	O
efficiency	O
of	O
any	O
object	Method
detector	Method
can	O
be	O
improved	O
along	O
two	O
orthogonal	O
directions	O
:	O
reducing	O
the	O
number	O
of	O
pixels	O
processed	O
and	O
reducing	O
the	O
amount	O
of	O
processing	O
per	O
pixel	O
.	O

We	O
explore	O
both	O
directions	O
and	O
introduce	O
two	O
efficient	O
variants	O
of	O
CornerNet	Method
:	O
CornerNet	Method
-	Method
Saccade	Method
and	O
CornerNet	Method
-	Method
Squeeze	Method
,	O
which	O
we	O
refer	O
to	O
collectively	O
as	O
CornerNet	Method
-	O
Lite	O
.	O

CornerNet	Method
-	Method
Saccade	Method
speeds	O
up	O
inference	Task
by	O
reducing	O
the	O
number	O
of	O
pixels	O
to	O
process	O
.	O

It	O
uses	O
an	O
attention	Method
mechanism	Method
similar	O
to	O
saccades	O
in	O
human	Task
vision	Task
.	O

It	O
starts	O
with	O
a	O
downsized	O
full	O
image	O
and	O
generates	O
an	O
attention	O
map	O
,	O
which	O
is	O
then	O
zoomed	O
in	O
on	O
and	O
processed	O
further	O
by	O
the	O
model	O
.	O

This	O
differs	O
from	O
the	O
original	O
CornerNet	Method
in	O
that	O
it	O
is	O
applied	O
fully	O
convolutionally	Method
across	O
multiple	O
scales	O
.	O

By	O
selecting	O
a	O
subset	O
of	O
crops	O
to	O
examine	O
in	O
high	O
resolution	O
,	O
CornerNet	Method
-	Method
Saccade	Method
improves	O
speed	O
while	O
improving	O
the	O
accuracy	Metric
.	O

Experiments	O
on	O
COCO	Material
show	O
that	O
CornerNet	Method
-	Method
Saccade	Method
achieves	O
an	O
AP	Metric
of	O
43.2	O
%	O
at	O
190ms	O
per	O
image	O
,	O
a	O
1	O
%	O
increase	O
in	O
AP	Metric
and	O
a	O
6.0x	O
speed	O
-	O
up	O
over	O
the	O
original	O
CornerNet	Method
.	O

CornerNet	Method
-	Method
Squeeze	Method
speeds	O
up	O
inference	Task
by	O
reducing	O
the	O
amount	O
of	O
processing	O
per	O
pixel	O
.	O

It	O
incorporates	O
ideas	O
from	O
SqueezeNet	Method
and	O
MobileNets	Method
,	O
and	O
introduces	O
a	O
new	O
,	O
compact	O
hourglass	Method
backbone	Method
that	O
makes	O
extensive	O
use	O
of	O
1	Method
1	Method
convolution	Method
,	O
bottleneck	Method
layer	Method
,	O
and	O
depth	Method
-	Method
wise	Method
separable	Method
convolution	Method
.	O

With	O
the	O
new	O
hourglass	Method
backbone	Method
,	O
CornerNet	Method
-	Method
Squeeze	Method
achieves	O
an	O
AP	Metric
of	O
34.4	O
%	O
on	O
COCO	Material
at	O
30ms	O
,	O
simultaneously	O
more	O
accurate	O
and	O
faster	O
than	O
YOLOv3	Method
(	O
33.0	O
%	O
at	O
39ms	O
)	O
.	O

A	O
natural	O
question	O
is	O
whether	O
CornerNet	Method
-	Method
Squeeze	Method
can	O
be	O
combined	O
with	O
saccades	Method
to	O
improve	O
its	O
efficiency	O
even	O
further	O
.	O

Somewhat	O
surprisingly	O
,	O
our	O
experiments	O
give	O
a	O
negative	O
answer	O
:	O
CornerNet	Method
-	O
Squeeze	O
-	O
Saccade	O
turns	O
out	O
slower	O
and	O
less	O
accurate	Metric
than	O
CornerNet	Method
-	Method
Squeeze	Method
.	O

This	O
is	O
because	O
for	O
saccades	O
to	O
help	O
,	O
the	O
network	O
needs	O
to	O
be	O
able	O
to	O
generate	O
sufficiently	O
accurate	O
attention	O
maps	O
,	O
but	O
the	O
ultra	Method
-	Method
compact	Method
architecture	Method
of	O
CornerNet	Method
-	Method
Squeeze	Method
does	O
not	O
have	O
this	O
extra	O
capacity	O
.	O

In	O
addition	O
,	O
the	O
original	O
CornerNet	Method
is	O
applied	O
at	O
multiple	O
scales	O
,	O
which	O
provides	O
ample	O
room	O
for	O
saccades	O
to	O
cut	O
down	O
on	O
the	O
number	O
of	O
pixels	O
to	O
process	O
.	O

In	O
contrast	O
,	O
CornerNet	Method
-	Method
Squeeze	Method
is	O
already	O
applied	O
at	O
a	O
single	O
scale	O
due	O
to	O
the	O
ultra	O
-	O
tight	O
inference	O
budget	O
,	O
which	O
provides	O
much	O
less	O
room	O
for	O
saccades	O
to	O
save	O
.	O

Significance	O
and	O
novelty	O
:	O
Collectively	O
,	O
these	O
two	O
variants	O
of	O
CornerNet	Method
-	O
Lite	O
make	O
the	O
keypoint	Method
-	Method
based	Method
approach	Method
competitive	O
,	O
covering	O
two	O
popular	O
use	O
cases	O
:	O
CornerNet	Method
-	Method
Saccade	Method
for	O
offline	Task
processing	Task
,	O
improving	O
efficiency	Metric
without	O
sacrificing	O
accuracy	Metric
,	O
and	O
CornerNet	Method
-	Method
Squeeze	Method
for	O
real	Task
-	Task
time	Task
processing	Task
,	O
improving	O
accuracy	Metric
without	O
sacrificing	O
efficiency	Metric
.	O

Both	O
variants	O
of	O
CornerNet	Method
-	O
Lite	O
are	O
technically	O
novel	O
.	O

CornerNet	Method
-	Method
Saccade	Method
is	O
the	O
first	O
to	O
integrate	O
saccades	Task
with	O
keypoint	Task
-	Task
based	Task
object	Task
detection	Task
.	O

Its	O
key	O
difference	O
from	O
prior	O
work	O
lies	O
in	O
how	O
each	O
crop	O
(	O
of	O
pixels	O
or	O
feature	O
maps	O
)	O
is	O
processed	O
.	O

Prior	O
work	O
that	O
employs	O
saccade	Method
-	O
like	O
mechanisms	O
either	O
detects	O
a	O
single	O
object	O
per	O
crop	O
(	O
e.g.	O
Faster	O
R	Method
-	Method
CNN	Method
)	O
or	O
produces	O
multiple	O
detections	O
per	O
crop	O
with	O
a	O
two	O
-	O
stage	Method
network	Method
involving	O
additional	O
sub	O
-	O
crops	O
(	O
e.g.	O
AutoFocus	O
)	O
.	O

In	O
contrast	O
,	O
CornerNet	Method
-	Method
Saccade	Method
produces	O
multiple	O
detections	O
per	O
crop	O
with	O
a	O
single	Method
-	Method
stage	Method
network	Method
.	O

CornerNet	Method
-	Method
Squeeze	Method
is	O
the	O
first	O
to	O
integrate	O
SqueezeNet	Method
with	O
the	O
stacked	Method
hourglass	Method
architecture	Method
and	O
to	O
apply	O
such	O
a	O
combination	O
on	O
object	Task
detection	Task
.	O

Prior	O
works	O
that	O
employ	O
the	O
hourglass	Method
architecture	Method
have	O
excelled	O
at	O
achieving	O
competitive	Metric
accuracy	Metric
,	O
but	O
it	O
was	O
unclear	O
whether	O
and	O
how	O
the	O
hourglass	Method
architecture	Method
can	O
be	O
competitive	O
in	O
terms	O
of	O
efficiency	Metric
.	O

Our	O
design	O
and	O
results	O
show	O
that	O
this	O
is	O
possible	O
for	O
the	O
first	O
time	O
,	O
particularly	O
in	O
the	O
context	O
of	O
object	Task
detection	Task
.	O

Contributions	O
Our	O
contributions	O
are	O
three	O
-	O
fold	O
:	O
(	O
1	O
)	O
We	O
propose	O
CornerNet	Method
-	Method
Saccade	Method
and	O
CornerNet	Method
-	Method
Squeeze	Method
,	O
two	O
novel	O
approaches	O
to	O
improving	O
the	O
efficiency	O
of	O
keypoint	Task
-	Task
based	Task
object	Task
detection	Task
;	O
(	O
2	O
)	O
On	O
COCO	Material
,	O
we	O
improve	O
the	O
efficiency	O
of	O
state	O
-	O
of	O
-	O
the	O
-	O
art	O
keypoint	Task
based	Task
detection	Task
by	O
6	O
fold	O
and	O
the	O
AP	Metric
from	O
42.2	O
%	O
to	O
43.2	O
%	O
,	O
(	O
3	O
)	O
On	O
COCO	Material
,	O
we	O
improve	O
both	O
the	O
accuracy	Metric
and	O
efficiency	O
of	O
state	O
-	O
of	O
-	O
the	O
art	O
real	Task
-	Task
time	Task
object	Task
detection	Task
(	O
to	O
34.4	O
%	O
at	O
30ms	O
from	O
33.0	O
%	O
at	O
39ms	O
of	O
YOLOv3	Method
)	O
.	O

Code	O
is	O
available	O
at	O
.	O

section	O
:	O
Related	O
Work	O
Saccades	Method
in	O
Object	Task
Detection	Task
.	O

Saccades	Method
in	O
human	Task
vision	Task
refers	O
to	O
a	O
sequence	O
of	O
rapid	O
eye	O
movements	O
to	O
fixate	O
different	O
image	O
regions	O
.	O

In	O
the	O
context	O
of	O
object	Task
detection	Task
algorithms	Task
,	O
we	O
use	O
the	O
term	O
broadly	O
to	O
mean	O
selectively	O
cropping	O
and	O
processing	O
image	O
regions	O
(	O
sequentially	O
or	O
in	O
parallel	O
,	O
pixels	O
or	O
features	O
)	O
during	O
inference	Task
.	O

There	O
has	O
been	O
a	O
long	O
history	O
of	O
using	O
saccades	Task
in	O
object	Task
detection	Task
to	O
speed	O
up	O
inference	Task
.	O

For	O
example	O
,	O
a	O
special	O
case	O
of	O
saccades	Method
is	O
a	O
cascade	Method
that	O
repeatedly	O
selects	O
a	O
subset	O
of	O
regions	O
for	O
further	O
processing	O
,	O
as	O
exemplified	O
by	O
the	O
Viola	Method
-	Method
Jones	Method
face	Method
detector	Method
.	O

The	O
idea	O
of	O
saccades	O
has	O
taken	O
diverse	O
forms	O
in	O
various	O
approaches	O
,	O
but	O
can	O
be	O
roughly	O
categorized	O
by	O
how	O
each	O
crop	O
is	O
processed	O
,	O
in	O
particular	O
,	O
what	O
kind	O
of	O
output	O
is	O
produced	O
after	O
processing	O
each	O
crop	O
.	O

Saccades	Method
in	O
R	Method
-	Method
CNN	Method
,	O
Fast	Method
R	Method
-	Method
CNN	Method
,	O
and	O
Faster	Method
R	Method
-	Method
CNN	Method
take	O
the	O
form	O
of	O
crops	O
representing	O
potential	O
objects	O
.	O

After	O
processing	O
,	O
each	O
crop	O
is	O
either	O
rejected	O
or	O
converted	O
to	O
a	O
single	O
labeled	O
box	O
through	O
classification	Method
and	Method
regression	Method
.	O

Cascade	Method
R	Method
-	Method
CNN	Method
extends	O
Faster	Method
R	Method
-	Method
CNN	Method
by	O
using	O
a	O
cascade	Method
of	Method
classifiers	Method
and	O
regressors	Method
to	O
iteratively	O
reject	O
or	O
refine	O
each	O
proposal	O
.	O

The	O
saccades	O
in	O
all	O
these	O
R	Method
-	Method
CNN	Method
variants	Method
are	O
thus	O
single	O
-	O
type	O
and	O
single	O
-	O
object	O
,	O
in	O
that	O
there	O
is	O
a	O
single	O
type	O
of	O
processing	O
of	O
crops	O
,	O
and	O
each	O
crop	O
produces	O
at	O
most	O
a	O
single	O
object	O
.	O

AutoFocus	Method
,	O
which	O
builds	O
upon	O
SNIPER	Method
that	O
improved	O
R	Method
-	Method
CNN	Method
training	Method
,	O
adds	O
a	O
branch	O
to	O
Faster	O
R	Method
-	Method
CNN	Method
to	O
predict	O
the	O
regions	O
that	O
are	O
likely	O
to	O
contain	O
small	O
objects	O
.	O

Then	O
it	O
applies	O
Faster	O
R	Method
-	Method
CNN	Method
again	O
to	O
each	O
of	O
those	O
regions	O
by	O
cropping	O
the	O
original	O
pixels	O
.	O

In	O
AutoFocus	Task
,	O
there	O
are	O
two	O
kinds	O
of	O
cropping	Method
,	O
one	O
that	O
can	O
produce	O
multiple	O
objects	O
(	O
by	O
calling	O
Faster	Method
R	Method
-	Method
CNN	Method
as	O
a	O
subroutine	O
)	O
,	O
and	O
the	O
other	O
that	O
can	O
produce	O
at	O
most	O
a	O
single	O
object	O
(	O
cropping	O
done	O
within	O
Faster	O
R	Method
-	Method
CNN	Method
)	O
.	O

The	O
saccades	O
in	O
AutoFocus	O
are	O
thus	O
multi	O
-	O
type	O
and	O
mixed	O
,	O
in	O
the	O
sense	O
that	O
two	O
different	O
types	O
of	O
processing	O
are	O
interleaved	O
.	O

In	O
contrast	O
,	O
saccades	O
in	O
CornerNet	Method
-	Method
Saccade	Method
are	O
single	O
-	O
type	O
and	O
multi	O
-	O
object	O
,	O
in	O
that	O
there	O
is	O
a	O
single	O
type	O
of	O
crop	Method
processing	Method
and	O
each	O
crop	O
can	O
produce	O
multiple	O
objects	O
at	O
once	O
without	O
additional	O
subcrops	O
.	O

This	O
means	O
that	O
the	O
number	O
of	O
crops	O
processed	O
by	O
CornerNet	Method
-	Method
Saccade	Method
can	O
be	O
much	O
smaller	O
than	O
the	O
number	O
of	O
objects	O
,	O
whereas	O
for	O
R	Method
-	Method
CNN	Method
variants	Method
and	O
AutoFocus	Method
the	O
number	O
of	O
crops	O
must	O
be	O
no	O
smaller	O
than	O
the	O
number	O
of	O
objects	O
.	O

Efficient	O
Object	Method
Detectors	Method
.	O

Other	O
than	O
accuracy	Metric
,	O
many	O
recent	O
works	O
have	O
improved	O
upon	O
the	O
efficiency	O
of	O
detectors	Method
since	O
the	O
introduction	O
of	O
R	Method
-	Method
CNN	Method
,	O
which	O
applies	O
a	O
ConvNet	Method
to	O
2000	O
RoIs	O
.	O

Repeatedly	O
applying	O
a	O
ConvNet	Method
to	O
the	O
RoIs	O
introduces	O
many	O
redundant	O
computations	O
.	O

SPP	Method
and	O
Fast	Method
R	Method
-	Method
CNN	Method
address	O
this	O
by	O
applying	O
a	O
ConvNet	Method
fully	Method
convolutionally	Method
on	O
the	O
image	O
and	O
extracting	O
features	O
directly	O
from	O
the	O
feature	O
maps	O
for	O
each	O
RoI.	O
Faster	O
R	Method
-	Method
CNN	Method
further	O
improves	O
efficiency	O
by	O
replacing	O
the	O
low	Method
-	Method
level	Method
vision	Method
algorithm	Method
with	O
a	O
region	Method
proposal	Method
network	Method
.	O

R	Method
-	Method
FCN	Method
replaces	O
the	O
expensive	O
fully	Method
connected	Method
sub	Method
-	Method
detection	Method
network	Method
with	O
a	O
fully	Method
convolutional	Method
network	Method
,	O
and	O
Light	Method
-	Method
Head	Method
R	Method
-	Method
CNN	Method
reduces	O
the	O
cost	O
in	O
R	Method
-	Method
FCN	Method
by	O
applying	O
separable	Method
convolution	Method
to	O
reduce	O
the	O
number	O
of	O
channels	O
in	O
the	O
feature	O
maps	O
before	O
RoI	Method
pooling	Method
.	O

On	O
the	O
other	O
hand	O
,	O
one	O
-	O
stage	Method
detectors	Method
remove	O
the	O
region	Method
pooling	Method
step	Method
of	O
two	Method
-	Method
stage	Method
detectors	Method
.	O

Efficient	Method
Network	Method
Architectures	Method
.	O

The	O
efficiency	O
of	O
ConvNets	Task
is	O
important	O
to	O
many	O
mobile	Task
and	Task
embedded	Task
applications	Task
.	O

Much	O
attention	O
has	O
been	O
given	O
to	O
the	O
design	O
of	O
efficient	O
network	Method
architectures	Method
.	O

SqueezeNet	Method
proposes	O
a	O
fire	Method
module	Method
to	O
reduce	O
the	O
number	O
of	O
parameters	O
in	O
AlexNet	O
by	O
50x	O
,	O
while	O
achieving	O
similar	O
performance	O
.	O

MobileNets	Method
are	O
a	O
class	O
of	O
lightweight	Method
networks	Method
that	O
use	O
depth	Method
-	Method
wise	Method
separable	Method
convolutions	Method
,	O
and	O
proposes	O
strategies	O
to	O
achieve	O
a	O
good	O
trade	O
-	O
off	O
between	O
accuracy	Metric
and	O
latency	Metric
.	O

PeleeNet	Method
,	O
in	O
contrast	O
,	O
demonstrates	O
the	O
effectiveness	O
of	O
standard	O
convolutions	Method
by	O
introducing	O
an	O
efficient	O
variant	O
of	O
DenseNet	Method
consisting	O
of	O
two	Method
-	Method
way	Method
dense	Method
layers	Method
and	O
a	O
stem	O
block	O
.	O

Other	O
networks	O
were	O
designed	O
specifically	O
for	O
real	Task
-	Task
time	Task
detection	Task
.	O

YOLOv2	Method
incorporates	O
ideas	O
from	O
NIN	Method
to	O
design	O
a	O
new	O
variant	O
of	O
VGG	Method
.	O

YOLOv3	Method
further	O
improves	O
DarkNet	Method
-	Method
19	Method
by	O
making	O
the	O
network	O
deeper	O
and	O
introducing	O
skip	O
connections	O
.	O

RFBNet	Method
proposes	O
a	O
new	O
module	O
which	O
mimics	O
the	O
receptive	O
field	O
of	O
human	Method
vision	Method
systems	Method
to	O
efficiently	O
gather	O
information	O
across	O
different	O
scales	O
.	O

section	O
:	O
CornerNet	Method
-	Method
Saccade	Method
CornerNet	Method
-	Method
Saccade	Method
detects	O
objects	O
within	O
small	O
regions	O
around	O
possible	O
object	O
locations	O
in	O
an	O
image	O
.	O

It	O
uses	O
the	O
downsized	O
full	O
image	O
to	O
predict	O
attention	O
maps	O
and	O
coarse	O
bounding	O
boxes	O
;	O
both	O
suggest	O
possible	O
object	O
locations	O
.	O

CornerNet	Method
-	Method
Saccade	Method
then	O
detects	O
objects	O
by	O
examining	O
the	O
regions	O
centered	O
at	O
the	O
locations	O
in	O
high	O
resolution	O
.	O

It	O
can	O
also	O
trade	O
accuracy	Metric
with	O
efficiency	O
by	O
controlling	O
the	O
maximum	O
number	O
of	O
object	O
locations	O
to	O
process	O
per	O
image	O
.	O

An	O
overview	O
of	O
the	O
pipeline	O
is	O
shown	O
in	O
Fig	O
.	O

[	O
reference	O
]	O
.	O

In	O
this	O
section	O
,	O
we	O
will	O
describe	O
each	O
step	O
in	O
detail	O
.	O

subsection	O
:	O
Estimating	Task
Object	Task
Locations	Task
The	O
first	O
step	O
in	O
CornerNet	Method
-	Method
Saccade	Method
is	O
to	O
obtain	O
possible	O
object	O
locations	O
in	O
an	O
image	O
.	O

We	O
use	O
downsized	O
full	O
images	O
to	O
predict	O
attention	O
maps	O
,	O
which	O
indicate	O
both	O
the	O
locations	O
and	O
the	O
coarse	O
scales	O
of	O
the	O
objects	O
at	O
the	O
locations	O
.	O

Given	O
an	O
image	O
,	O
we	O
downsize	O
it	O
to	O
two	O
scales	O
by	O
resizing	O
the	O
longer	O
side	O
of	O
the	O
image	O
to	O
and	O
pixels	O
.	O

The	O
image	O
of	O
size	O
is	O
padded	O
with	O
zeros	O
to	O
the	O
size	O
of	O
so	O
that	O
they	O
can	O
be	O
processed	O
in	O
parallel	O
.	O

There	O
are	O
two	O
reasons	O
for	O
using	O
image	O
at	O
such	O
low	O
resolutions	O
.	O

First	O
,	O
this	O
step	O
should	O
not	O
be	O
a	O
bottleneck	O
in	O
the	O
inference	Task
time	Task
.	O

Second	O
,	O
the	O
network	O
should	O
easily	O
leverage	O
the	O
context	O
information	O
in	O
the	O
image	O
to	O
predict	O
the	O
attention	O
maps	O
.	O

For	O
a	O
downsized	O
image	O
,	O
CornerNet	Method
-	Method
Saccade	Method
predicts	O
3	O
attention	O
maps	O
,	O
one	O
for	O
small	O
objects	O
,	O
one	O
for	O
medium	O
objects	O
and	O
one	O
for	O
large	O
objects	O
.	O

An	O
object	O
is	O
considered	O
small	O
if	O
the	O
longer	O
side	O
of	O
its	O
bounding	O
box	O
is	O
less	O
than	O
32	O
pixels	O
,	O
medium	O
if	O
it	O
is	O
between	O
32	O
and	O
96	O
pixels	O
,	O
and	O
large	O
if	O
it	O
is	O
greater	O
than	O
96	O
pixels	O
.	O

Predicting	O
locations	O
separately	O
for	O
different	O
object	O
sizes	O
gives	O
us	O
finer	O
control	O
over	O
how	O
much	O
CornerNet	Method
-	Method
Saccade	Method
should	O
zoom	O
in	O
at	O
each	O
location	O
.	O

We	O
can	O
zoom	O
in	O
more	O
at	O
small	O
object	O
locations	O
and	O
less	O
at	O
medium	O
object	O
locations	O
.	O

We	O
predict	O
the	O
attention	O
maps	O
by	O
using	O
feature	Method
maps	Method
at	O
different	O
scales	O
.	O

The	O
feature	O
maps	O
are	O
obtained	O
from	O
the	O
backbone	Method
network	Method
in	O
CornerNet	Method
-	Method
Saccade	Method
,	O
which	O
is	O
an	O
hourglass	Method
network	Method
.	O

Each	O
hourglass	Method
module	Method
in	O
the	O
network	O
applies	O
several	O
convolution	Method
and	Method
downsampling	Method
layers	Method
to	O
downsize	O
the	O
input	O
feature	O
maps	O
.	O

It	O
then	O
upsamples	O
the	O
feature	O
maps	O
back	O
to	O
the	O
original	O
input	O
resolution	O
by	O
multiple	O
convolution	Method
and	Method
upsampling	Method
layers	Method
.	O

The	O
feature	O
maps	O
from	O
the	O
upsampling	Method
layers	Method
are	O
used	O
to	O
predict	O
the	O
attention	O
maps	O
.	O

The	O
feature	O
maps	O
at	O
finer	O
scales	O
are	O
used	O
for	O
smaller	O
objects	O
and	O
the	O
ones	O
at	O
coarser	O
scales	O
are	O
for	O
larger	O
objects	O
.	O

We	O
predict	O
the	O
attention	O
maps	O
by	O
applying	O
a	O
Conv	Method
-	Method
ReLU	Method
module	Method
followed	O
by	O
a	O
Conv	Method
-	Method
Sigmoid	Method
module	Method
to	O
each	O
feature	O
map	O
.	O

During	O
testing	O
,	O
we	O
only	O
process	O
locations	O
where	O
scores	O
are	O
above	O
a	O
threshold	O
,	O
and	O
we	O
set	O
in	O
our	O
experiments	O
.	O

When	O
CornerNet	Method
-	Method
Saccade	Method
processes	O
the	O
downsized	O
image	O
,	O
it	O
is	O
possible	O
that	O
it	O
detects	O
some	O
of	O
the	O
objects	O
in	O
the	O
image	O
and	O
generates	O
bounding	O
boxes	O
for	O
them	O
.	O

The	O
bounding	O
boxes	O
obtained	O
from	O
the	O
downsized	O
image	O
may	O
not	O
be	O
accurate	O
.	O

Therefore	O
,	O
we	O
also	O
examine	O
the	O
regions	O
in	O
high	O
resolutions	O
to	O
get	O
better	O
bounding	O
boxes	O
.	O

During	O
training	O
,	O
we	O
set	O
the	O
center	O
location	O
of	O
each	O
bounding	O
box	O
on	O
the	O
corresponding	O
attention	O
map	O
to	O
be	O
positive	O
and	O
the	O
rest	O
to	O
negatives	O
.	O

Then	O
we	O
apply	O
the	O
focal	O
loss	O
with	O
.	O

The	O
biases	O
in	O
the	O
convolution	Method
layers	Method
that	O
predict	O
the	O
attention	O
maps	O
are	O
set	O
according	O
to	O
.	O

subsection	O
:	O
Detecting	Task
Objects	Task
CornerNet	Method
-	Method
Saccade	Method
uses	O
the	O
locations	O
obtained	O
from	O
the	O
downsized	O
image	O
to	O
determine	O
where	O
to	O
process	O
.	O

If	O
we	O
directly	O
crop	O
the	O
regions	O
from	O
the	O
downsized	O
image	O
,	O
some	O
objects	O
may	O
become	O
too	O
small	O
to	O
detect	O
accurately	O
.	O

Hence	O
,	O
we	O
should	O
examine	O
the	O
regions	O
at	O
higher	O
resolution	O
based	O
on	O
the	O
scale	O
information	O
obtained	O
in	O
the	O
first	O
step	O
.	O

For	O
the	O
locations	O
obtained	O
from	O
the	O
attention	O
maps	O
,	O
we	O
can	O
determine	O
different	O
zoom	O
-	O
in	O
scales	O
for	O
different	O
object	O
sizes	O
:	O
for	O
small	O
objects	O
,	O
for	O
medium	O
objects	O
and	O
for	O
large	O
objects	O
.	O

In	O
general	O
,	O
because	O
we	O
should	O
zoom	O
in	O
more	O
for	O
smaller	O
objects	O
,	O
so	O
we	O
set	O
,	O
and	O
.	O

At	O
each	O
possible	O
location	O
,	O
we	O
enlarge	O
the	O
downsized	O
image	O
by	O
,	O
where	O
depending	O
on	O
the	O
coarse	O
object	O
scale	O
.	O

Then	O
we	O
apply	O
CornerNet	Method
-	Method
Saccade	Method
to	O
a	O
window	O
centered	O
at	O
the	O
location	O
.	O

The	O
locations	O
obtained	O
from	O
the	O
bounding	Method
box	Method
predictions	Method
give	O
more	O
information	O
about	O
the	O
object	O
sizes	O
.	O

We	O
can	O
use	O
the	O
sizes	O
of	O
the	O
bounding	O
boxes	O
to	O
determine	O
zoom	O
-	O
in	O
scales	O
.	O

The	O
scale	O
is	O
determined	O
such	O
that	O
the	O
longer	O
side	O
of	O
the	O
bounding	O
box	O
after	O
zoom	O
-	O
in	O
is	O
for	O
a	O
small	O
object	O
,	O
for	O
a	O
medium	O
object	O
and	O
for	O
a	O
large	O
object	O
.	O

There	O
are	O
some	O
important	O
implementation	O
details	O
to	O
make	O
processing	Task
efficient	O
.	O

First	O
,	O
we	O
process	O
the	O
regions	O
in	O
batch	O
to	O
better	O
utilize	O
the	O
GPU	O
.	O

Second	O
,	O
we	O
keep	O
the	O
original	O
image	O
in	O
GPU	O
memory	O
,	O
and	O
perform	O
resizing	O
and	O
cropping	O
on	O
the	O
GPU	O
to	O
reduce	O
the	O
overhead	O
of	O
transferring	Task
image	Task
data	Task
between	O
CPU	O
and	O
GPU	O
.	O

After	O
detecting	O
objects	O
at	O
possible	O
object	O
locations	O
,	O
we	O
merge	O
the	O
bounding	O
boxes	O
and	O
remove	O
redundant	O
ones	O
by	O
applying	O
Soft	Method
-	Method
NMS	Method
.	O

When	O
we	O
crop	O
the	O
regions	O
,	O
the	O
regions	O
may	O
include	O
parts	O
of	O
the	O
objects	O
at	O
the	O
crop	O
boundaries	O
as	O
shown	O
in	O
Fig	O
.	O

[	O
reference	O
]	O
.	O

The	O
detector	O
may	O
generate	O
bounding	O
boxes	O
for	O
those	O
objects	O
,	O
which	O
may	O
not	O
be	O
removed	O
by	O
Soft	Method
-	Method
NMS	Method
as	O
they	O
may	O
have	O
low	O
overlaps	O
with	O
the	O
bounding	O
boxes	O
of	O
the	O
full	O
objects	O
.	O

Hence	O
,	O
we	O
remove	O
the	O
bounding	O
boxes	O
which	O
touch	O
the	O
crop	O
boundary	O
.	O

During	O
training	Task
,	O
we	O
apply	O
the	O
same	O
training	O
losses	O
in	O
CornerNet	Method
to	O
train	O
the	O
network	O
to	O
predict	O
corner	O
heatmaps	O
,	O
embeddings	O
and	O
offsets	O
.	O

subsection	O
:	O
Trading	O
Accuracy	Metric
with	O
Efficiency	O
We	O
can	O
trade	O
accuracy	Metric
with	O
efficiency	O
by	O
controlling	O
the	O
maximum	O
number	O
of	O
object	O
locations	O
to	O
process	O
per	O
image	O
.	O

To	O
achieve	O
a	O
good	O
accuracy	Metric
and	O
efficiency	O
trade	O
-	O
off	O
,	O
we	O
prioritize	O
the	O
locations	O
that	O
are	O
more	O
likely	O
to	O
contain	O
objects	O
.	O

Therefore	O
,	O
after	O
we	O
obtain	O
the	O
object	O
locations	O
,	O
we	O
rank	O
them	O
by	O
their	O
scores	O
and	O
prioritize	O
locations	O
obtained	O
from	O
the	O
bounding	O
boxes	O
.	O

Given	O
the	O
maximum	O
number	O
of	O
crops	O
to	O
process	O
,	O
we	O
detect	O
objects	O
in	O
the	O
top	O
object	O
locations	O
.	O

subsection	O
:	O
Suppressing	Task
Redundant	Task
Object	Task
Locations	Task
When	O
objects	O
are	O
close	O
to	O
each	O
other	O
,	O
we	O
may	O
generate	O
regions	O
that	O
highly	O
overlap	O
with	O
each	O
other	O
as	O
shown	O
in	O
Fig	O
.	O

[	O
reference	O
]	O
.	O

It	O
is	O
undesirable	O
to	O
process	O
both	O
regions	O
as	O
processing	O
either	O
one	O
of	O
them	O
is	O
likely	O
to	O
detect	O
objects	O
in	O
the	O
other	O
.	O

We	O
adopt	O
a	O
procedure	O
similar	O
to	O
NMS	Method
to	O
remove	O
redundant	O
locations	O
.	O

First	O
,	O
we	O
rank	O
the	O
object	O
locations	O
,	O
prioritizing	O
locations	O
from	O
bounding	O
boxes	O
over	O
locations	O
from	O
the	O
attention	O
maps	O
.	O

We	O
then	O
keep	O
the	O
best	O
object	O
location	O
and	O
remove	O
the	O
locations	O
that	O
are	O
close	O
to	O
the	O
best	O
location	O
.	O

We	O
repeat	O
the	O
procedure	O
until	O
no	O
object	O
locations	O
are	O
left	O
.	O

subsection	O
:	O
Backbone	Method
Network	Method
We	O
design	O
a	O
new	O
hourglass	Method
backbone	Method
network	Method
that	O
works	O
better	O
in	O
CornerNet	Method
-	Method
Saccade	Method
.	O

The	O
new	O
hourglass	Method
network	Method
consists	O
of	O
3	O
hourglass	Method
modules	Method
and	O
has	O
a	O
depth	O
of	O
54	O
layers	O
,	O
while	O
Hourglass	Method
-	Method
104	Method
in	O
CornerNet	Method
consists	O
of	O
2	O
hourglass	Method
modules	Method
and	O
has	O
a	O
depth	O
of	O
104	O
.	O

We	O
refer	O
to	O
the	O
new	O
backbone	O
as	O
Hourglass	O
-	O
54	O
.	O

Each	O
hourglass	Method
module	Method
in	O
Hourglass	Method
-	Method
54	Method
has	O
fewer	O
parameters	O
and	O
is	O
shallower	O
than	O
the	O
one	O
in	O
Hourglass	O
-	O
104	O
.	O

Following	O
the	O
downsizing	Method
strategy	Method
in	O
Hourglass	Method
-	Method
104	Method
,	O
we	O
downsize	O
the	O
feature	O
by	O
stride	O
2	O
.	O

We	O
apply	O
one	O
residual	Method
module	Method
after	O
each	O
downsampling	Method
layer	Method
and	O
in	O
each	O
skip	O
connection	O
.	O

Each	O
hourglass	Method
module	Method
downsizes	O
the	O
input	O
features	O
3	O
times	O
and	O
increases	O
the	O
number	O
of	O
channels	O
along	O
the	O
way	O
(	O
384	O
,	O
384	O
,	O
512	O
)	O
.	O

There	O
is	O
one	O
residual	Method
module	Method
with	O
512	O
channels	O
in	O
the	O
middle	O
of	O
the	O
module	O
,	O
and	O
one	O
residual	Method
module	Method
after	O
each	O
upsampling	Method
layer	Method
.	O

We	O
also	O
downsize	O
the	O
image	O
twice	O
before	O
the	O
hourglass	Method
modules	Method
.	O

Following	O
the	O
common	O
practice	O
of	O
training	O
an	O
hourglass	Method
network	Method
,	O
we	O
also	O
add	O
intermediate	O
supervisions	O
during	O
training	O
.	O

During	O
testing	O
,	O
we	O
only	O
use	O
the	O
predictions	O
from	O
the	O
last	O
hourglass	Method
module	Method
in	O
the	O
network	O
.	O

subsection	O
:	O
Training	O
Details	O
We	O
use	O
Adam	Method
to	O
optimize	O
both	O
the	O
losses	O
for	O
the	O
attention	Task
maps	Task
and	O
object	Task
detection	Task
,	O
and	O
use	O
the	O
same	O
training	O
hyperparameters	O
found	O
in	O
CornerNet	Method
.	O

The	O
input	O
size	O
to	O
the	O
network	O
is	O
,	O
which	O
is	O
also	O
the	O
input	O
resolution	O
during	O
inference	Task
.	O

We	O
train	O
the	O
network	O
with	O
a	O
batch	O
size	O
of	O
48	O
on	O
four	O
1080Ti	O
GPUs	O
.	O

In	O
order	O
to	O
avoid	O
over	Task
-	Task
fitting	Task
,	O
we	O
adopt	O
the	O
data	Method
augmentation	Method
techniques	Method
used	O
in	O
CornerNet	Method
.	O

When	O
we	O
randomly	O
crop	O
a	O
region	O
around	O
an	O
object	O
,	O
the	O
object	O
is	O
either	O
placed	O
randomly	O
or	O
at	O
the	O
center	O
with	O
some	O
random	O
offset	O
.	O

This	O
ensures	O
that	O
training	O
and	O
testing	O
are	O
consistent	O
as	O
the	O
network	O
detects	O
objects	O
within	O
the	O
crops	O
centered	O
at	O
object	O
locations	O
.	O

section	O
:	O
CornerNet	Method
-	Method
Squeeze	Method
subsection	O
:	O
Overview	O
In	O
contrast	O
to	O
CornerNet	Method
-	Method
Saccade	Method
,	O
which	O
focuses	O
on	O
a	O
subset	O
of	O
the	O
pixels	O
to	O
reduce	O
the	O
amount	O
of	O
processing	O
,	O
CornerNet	Method
-	Method
Squeeze	Method
explores	O
an	O
alternative	O
approach	O
of	O
reducing	O
the	O
amount	O
of	O
processing	O
per	O
pixel	O
.	O

In	O
CornerNet	Method
,	O
most	O
of	O
the	O
computational	Metric
resources	Metric
are	O
spent	O
on	O
Hourglass	O
-	O
104	O
.	O

Hourglass	Method
-	Method
104	Method
is	O
built	O
from	O
residual	Method
blocks	Method
which	O
consists	O
of	O
two	O
convolution	Method
layers	Method
and	O
a	O
skip	O
connection	O
.	O

Although	O
Hourglass	Method
-	Method
104	Method
achieves	O
competitive	O
performance	O
,	O
it	O
is	O
expensive	O
in	O
terms	O
of	O
number	O
of	O
parameters	O
and	O
inference	Metric
time	Metric
.	O

To	O
reduce	O
the	O
complexity	Metric
of	O
Hourglass	O
-	O
104	O
,	O
we	O
incorporate	O
ideas	O
from	O
SqueezeNet	Method
and	O
MobileNets	Method
to	O
design	O
a	O
lightweight	Method
hourglass	Method
architecture	Method
.	O

subsection	O
:	O
Ideas	O
from	O
SqueezeNet	Method
and	O
MobileNets	Method
SqueezeNet	Method
proposes	O
three	O
strategies	O
to	O
reduce	O
network	Metric
complexity	Metric
:	O
(	O
1	O
)	O
replacing	O
kernels	O
with	O
kernels	O
;	O
(	O
2	O
)	O
decreasing	O
input	O
channels	O
to	O
kernels	O
;	O
(	O
3	O
)	O
downsampling	O
late	O
.	O

The	O
building	O
block	O
of	O
SqueezeNet	Method
,	O
the	O
fire	Method
module	Method
,	O
encapsulates	O
the	O
first	O
two	O
ideas	O
.	O

The	O
fire	Method
module	Method
first	O
reduces	O
the	O
number	O
of	O
input	O
channels	O
with	O
a	O
squeeze	Method
layer	Method
consisting	O
of	O
filters	Method
.	O

Then	O
,	O
it	O
feeds	O
the	O
result	O
through	O
an	O
expand	Method
layer	Method
consisting	O
of	O
a	O
mixture	Method
of	Method
and	Method
filters	Method
.	O

Based	O
on	O
the	O
insights	O
provided	O
by	O
SqueezeNet	Method
,	O
we	O
use	O
the	O
fire	Method
module	Method
in	O
CornerNet	Method
-	Method
Squeeze	Method
instead	O
of	O
the	O
residual	O
block	O
.	O

Furthermore	O
,	O
inspired	O
by	O
the	O
success	O
of	O
MobileNets	Method
,	O
we	O
replace	O
the	O
standard	O
convolution	Method
in	O
the	O
second	Method
layer	Method
with	O
a	O
depth	Method
-	Method
wise	Method
separable	Method
convolution	Method
,	O
which	O
further	O
improves	O
inference	Metric
time	Metric
.	O

Tab	O
.	O

[	O
reference	O
]	O
shows	O
a	O
detail	O
comparison	O
between	O
the	O
residual	O
block	O
in	O
CornerNet	Method
and	O
the	O
new	O
fire	Method
module	Method
in	O
CornerNet	Method
-	Method
Squeeze	Method
.	O

We	O
do	O
not	O
explore	O
the	O
third	O
idea	O
in	O
SqueezeNet	O
.	O

Since	O
the	O
hourglass	Method
network	Method
has	O
a	O
symmetrical	O
structure	O
,	O
delayed	Method
downsampling	Method
results	O
in	O
higher	O
resolution	O
feature	O
maps	O
during	O
the	O
upsampling	O
.	O

Performing	O
convolution	Method
on	O
high	Task
resolution	Task
feature	Task
maps	Task
is	O
computationally	O
expensive	O
,	O
which	O
would	O
prevent	O
us	O
from	O
achieving	O
real	Task
-	Task
time	Task
detection	Task
.	O

Other	O
than	O
replacing	O
the	O
residual	O
blocks	O
,	O
we	O
also	O
make	O
a	O
few	O
more	O
modifications	O
.	O

We	O
reduce	O
the	O
maximum	O
feature	O
map	O
resolution	O
of	O
the	O
hourglass	Method
modules	Method
by	O
adding	O
one	O
more	O
downsampling	O
layer	O
before	O
the	O
hourglass	Method
modules	Method
,	O
and	O
remove	O
one	O
downsampling	Method
layer	Method
in	O
each	O
hourglass	Method
module	Method
.	O

CornerNet	Method
-	Method
Squeeze	Method
correspondingly	O
downsizes	O
the	O
image	O
three	O
times	O
before	O
the	O
hourglass	Method
module	Method
,	O
whereas	O
CornerNet	Method
downsizes	O
the	O
image	O
twice	O
.	O

We	O
replace	O
the	O
filters	O
with	O
filters	O
in	O
the	O
prediction	Method
modules	Method
of	O
CornerNet	Method
.	O

Finally	O
,	O
we	O
replace	O
the	O
nearest	Method
neighbor	Method
upsampling	Method
in	O
the	O
hourglass	Method
network	Method
with	O
transpose	Method
convolution	Method
with	O
a	O
kernel	Method
.	O

subsection	O
:	O
Training	O
Details	O
We	O
use	O
the	O
same	O
training	O
losses	O
and	O
hyperparameters	O
of	O
CornerNet	Method
to	O
train	O
CornerNet	Method
-	Method
Squeeze	Method
.	O

The	O
only	O
change	O
is	O
the	O
batch	O
size	O
.	O

Downsizing	O
the	O
image	O
one	O
more	O
time	O
prior	O
to	O
the	O
hourglass	Method
modules	Method
reduces	O
the	O
memory	Metric
usage	Metric
by	O
4	O
times	O
under	O
the	O
same	O
image	O
resolution	O
in	O
CornerNet	Method
-	Method
Squeeze	Method
.	O

We	O
are	O
able	O
to	O
train	O
the	O
network	O
with	O
a	O
batch	Metric
size	Metric
of	O
on	O
four	O
1080Ti	O
GPUs	O
(	O
13	O
images	O
on	O
the	O
master	O
GPU	O
and	O
14	O
images	O
per	O
GPU	O
for	O
the	O
rest	O
of	O
the	O
GPUs	O
)	O
.	O

section	O
:	O
Experiments	O
subsection	O
:	O
Implementation	O
Details	O
CornerNet	Method
-	O
Lite	O
is	O
implemented	O
in	O
PyTorch	Method
.	O

We	O
use	O
COCO	Material
to	O
evaluate	O
CornerNet	Method
-	O
Lite	O
and	O
compare	O
it	O
with	O
other	O
detectors	O
.	O

In	O
COCO	Material
,	O
there	O
are	O
80	O
object	O
categories	O
,	O
115k	O
images	O
for	O
training	O
,	O
5k	O
images	O
for	O
validation	Task
and	O
20k	O
images	O
for	O
testing	O
.	O

To	O
measure	O
the	O
inference	Metric
time	Metric
,	O
for	O
each	O
detector	Method
,	O
we	O
start	O
the	O
timer	O
as	O
soon	O
as	O
it	O
finishes	O
reading	O
the	O
image	O
and	O
stop	O
the	O
timer	O
as	O
soon	O
as	O
it	O
obtains	O
the	O
final	O
bounding	O
boxes	O
.	O

The	O
hardware	O
configuration	O
may	O
affect	O
the	O
inference	Metric
time	Metric
.	O

To	O
provide	O
fair	O
comparisons	O
between	O
different	O
detectors	O
,	O
we	O
measure	O
the	O
inference	Metric
times	Metric
on	O
the	O
same	O
machine	O
with	O
a	O
1080Ti	O
GPU	O
and	O
an	O
Intel	O
Core	O
i7	O
-	O
7700k	O
CPU	O
.	O

subsection	O
:	O
Accuracy	Metric
and	O
Efficiency	Metric
Trade	O
-	O
offs	O
We	O
compare	O
the	O
accuracy	Metric
-	Metric
efficiency	Metric
trade	Metric
-	Metric
offs	Metric
of	O
CornerNet	Method
-	O
Lite	O
with	O
three	O
state	O
-	O
of	O
-	O
the	O
-	O
art	O
object	Method
detectors	Method
,	O
including	O
YOLOv3	Method
,	O
RetinaNet	Method
and	O
CornerNet	Method
,	O
on	O
the	O
validation	O
set	O
.	O

The	O
accuracy	Metric
and	O
efficiency	Metric
trade	Metric
-	Metric
off	Metric
curves	Metric
are	O
shown	O
in	O
Fig	O
.	O

[	O
reference	O
]	O
.	O

We	O
evaluate	O
CornerNet	Method
-	Method
Saccade	Method
under	O
different	O
,	O
ranging	O
from	O
1	O
to	O
30	O
.	O

For	O
RetinaNet	Material
,	O
we	O
evaluate	O
at	O
different	O
single	O
scale	O
settings	O
,	O
including	O
300	O
,	O
400	O
,	O
500	O
,	O
600	O
,	O
700	O
,	O
and	O
800	O
(	O
the	O
default	O
scale	O
)	O
.	O

For	O
CornerNet	Method
,	O
we	O
evaluate	O
at	O
different	O
single	O
scales	O
of	O
the	O
original	O
image	O
resolutions	O
,	O
including	O
0.5	O
,	O
0.6	O
,	O
0.7	O
,	O
0.8	O
,	O
0.9	O
and	O
1	O
(	O
original	O
image	O
resolution	O
)	O
.	O

We	O
also	O
test	O
it	O
under	O
the	O
default	O
multi	O
-	O
scale	O
setting	O
,	O
and	O
without	O
flipped	O
image	O
.	O

CornerNet	Method
-	Method
Saccade	Method
achieves	O
a	O
better	O
accuracy	Metric
and	O
efficiency	Metric
trade	Metric
-	Metric
off	Metric
(	O
42.6	O
%	O
at	O
190ms	O
)	O
than	O
both	O
RetinaNet	Method
(	O
39.8	O
%	O
at	O
190ms	O
)	O
and	O
CornerNet	Method
(	O
40.6	O
%	O
at	O
213ms	O
)	O
.	O

Fig	O
.	O

[	O
reference	O
]	O
shows	O
some	O
qualitative	O
examples	O
comparing	O
CornerNet	Method
-	Method
Saccade	Method
and	O
CornerNet	Method
.	O

Following	O
the	O
default	O
settings	O
of	O
YOLOv3	Method
,	O
we	O
evaluate	O
YOLOv3	Method
at	O
3	O
single	O
image	O
scales	O
(	O
320	O
,	O
416	O
and	O
608	O
)	O
.	O

Similarly	O
,	O
we	O
also	O
evaluate	O
CornerNet	Method
-	O
Squeeze	O
at	O
different	O
single	O
scales	O
(	O
0.5	O
,	O
0.6	O
,	O
0.7	O
,	O
0.8	O
,	O
0.9	O
,	O
1	O
)	O
.	O

CornerNet	Method
-	Method
Squeeze	Method
achieves	O
a	O
better	O
accuracy	Metric
and	O
efficiency	Metric
(	O
34.4	O
%	O
at	O
30ms	O
)	O
trade	O
-	O
off	O
than	O
YOLOv3	Method
(	O
32.4	O
%	O
at	O
39ms	O
)	O
.	O

We	O
further	O
improve	O
the	O
accuracy	Metric
of	O
CornerNet	Method
-	Method
Squeeze	Method
by	O
running	O
it	O
on	O
both	O
flipped	O
and	O
original	O
images	O
,	O
which	O
improves	O
its	O
AP	Metric
to	O
36.5	O
%	O
at	O
50ms	O
and	O
still	O
achieves	O
a	O
good	O
trade	O
-	O
off	O
.	O

When	O
we	O
test	O
CornerNet	Method
-	Method
Squeeze	Method
under	O
multi	Task
-	Task
scale	Task
setting	Task
,	O
we	O
observe	O
only	O
a	O
0.6	O
%	O
improvement	O
in	O
AP	Metric
but	O
the	O
inference	Metric
time	Metric
increases	O
to	O
170ms	O
.	O

subsection	O
:	O
CornerNet	Method
-	Method
Saccade	Method
Results	O
Training	O
Efficiency	O
CornerNet	Method
-	Method
Saccade	Method
not	O
only	O
improves	O
the	O
efficiency	O
in	O
testing	Task
but	O
also	O
in	O
training	Task
.	O

We	O
are	O
able	O
to	O
train	O
CornerNet	Method
-	Method
Saccade	Method
on	O
only	O
four	O
1080Ti	O
GPUs	O
with	O
a	O
total	O
of	O
44	O
GB	O
GPU	O
memory	O
,	O
while	O
CornerNet	Method
requires	O
ten	O
Titan	O
X	O
(	O
PASCAL	O
)	O
GPUs	O
with	O
a	O
total	O
of	O
120	O
GB	O
GPU	O
memory	O
.	O

We	O
reduce	O
the	O
memory	Metric
usage	Metric
by	O
more	O
than	O
60	O
%	O
.	O

Neither	O
CornerNet	Method
nor	O
CornerNet	Method
-	Method
Saccade	Method
uses	O
mixed	Method
precision	Method
training	Method
.	O

Error	Method
Analysis	Method
The	O
attention	O
maps	O
are	O
important	O
to	O
CornerNet	Method
-	Method
Saccade	Method
.	O

If	O
the	O
attention	O
maps	O
are	O
inaccurate	O
,	O
CornerNet	Method
-	Method
Saccade	Method
will	O
miss	O
objects	O
in	O
the	O
image	O
.	O

To	O
give	O
a	O
better	O
understanding	O
of	O
the	O
attention	Metric
map	Metric
quality	Metric
,	O
we	O
replace	O
the	O
predicted	O
attention	O
maps	O
with	O
the	O
ground	O
-	O
truth	O
ones	O
.	O

This	O
improves	O
the	O
AP	Metric
of	O
CornerNet	Method
-	Method
Saccade	Method
from	O
42.6	O
%	O
to	O
50.3	O
%	O
on	O
the	O
validation	O
set	O
,	O
showing	O
there	O
is	O
ample	O
room	O
for	O
improving	O
the	O
attention	O
maps	O
.	O

Performance	O
Analysis	O
of	O
Hourglass	Task
-	Task
54	Task
We	O
introduce	O
a	O
new	O
hourglass	Method
,	O
Hourglass	Method
-	Method
54	Method
,	O
in	O
CornerNet	Method
-	Method
Saccade	Method
,	O
and	O
perform	O
two	O
experiments	O
to	O
better	O
understand	O
the	O
performance	O
contribution	O
of	O
Hourglass	Method
-	Method
54	Method
.	O

First	O
,	O
we	O
train	O
CornerNet	Method
-	Method
Saccade	Method
with	O
Hourglass	Method
-	Method
104	Method
instead	O
of	O
Hourglass	Method
-	Method
54	Method
.	O

Second	O
,	O
we	O
train	O
CornerNet	Method
with	O
Hourglass	Method
-	Method
54	Method
instead	O
of	O
Hourglass	Method
-	Method
104	Method
.	O

For	O
the	O
second	O
experiment	O
,	O
due	O
to	O
limited	O
resources	O
,	O
we	O
train	O
both	O
networks	O
with	O
a	O
batch	O
size	O
of	O
15	O
on	O
four	O
1080Ti	O
GPUs	O
and	O
we	O
follow	O
the	O
training	O
details	O
in	O
CornerNet	Method
.	O

Tab	O
.	O

[	O
reference	O
]	O
shows	O
that	O
CornerNet	Method
-	Method
Saccade	Method
with	O
Hourglass	Method
-	Method
54	Method
(	O
42.6	O
%	O
AP	Metric
)	O
is	O
more	O
accurate	Metric
than	O
with	O
Hourglass	Method
-	Method
104	Method
(	O
41.4	O
%	O
)	O
.	O

To	O
investigate	O
the	O
difference	O
in	O
performance	O
,	O
we	O
evaluate	O
the	O
quality	Metric
of	O
both	O
the	O
attention	O
maps	O
and	O
bounding	O
boxes	O
.	O

First	O
,	O
predicting	Task
the	Task
attention	Task
maps	Task
can	O
be	O
seen	O
as	O
a	O
binary	Task
classification	Task
problem	Task
,	O
where	O
the	O
object	O
locations	O
are	O
positives	O
and	O
the	O
rest	O
are	O
negatives	O
.	O

We	O
measure	O
the	O
quality	Metric
of	O
the	O
attention	O
maps	O
by	O
average	Metric
precision	Metric
,	O
denoted	O
as	O
.	O

Hourglass	Method
-	Method
54	Method
achieves	O
an	O
of	O
42.7	O
%	O
,	O
while	O
Hourglass	Method
-	Method
104	Method
achieves	O
40.1	O
%	O
,	O
suggesting	O
that	O
Hourglass	Method
-	Method
54	Method
is	O
better	O
at	O
predicting	Task
attention	Task
maps	Task
.	O

Second	O
,	O
to	O
study	O
the	O
quality	O
of	O
bounding	O
boxes	O
from	O
each	O
network	O
,	O
we	O
replace	O
the	O
predicted	O
attention	O
maps	O
with	O
the	O
ground	O
-	O
truth	O
attention	O
maps	O
,	O
and	O
also	O
train	O
CornerNet	Method
with	O
Hourglass	Method
-	Method
54	Method
.	O

With	O
the	O
ground	O
-	O
truth	O
attention	O
maps	O
,	O
CornerNet	Method
-	Method
Saccade	Method
with	O
Hourglass	Method
-	Method
54	Method
achieves	O
an	O
AP	Metric
of	O
50.3	O
%	O
while	O
CornerNet	Method
-	Method
Saccade	Method
with	O
Hourglass	Method
-	Method
104	Method
achieves	O
an	O
AP	Metric
of	O
48.9	O
%	O
.	O

CornerNet	Method
with	O
Hourglass	Method
-	Method
54	Method
achieves	O
an	O
AP	Metric
of	O
37.2	O
%	O
,	O
while	O
Hourglass	Method
-	Method
104	Method
achieves	O
38.2	O
%	O
.	O

The	O
results	O
suggest	O
that	O
Hourglass	Method
-	Method
54	Method
produces	O
better	O
bounding	O
boxes	O
when	O
combined	O
with	O
saccade	Method
.	O

subsection	O
:	O
CornerNet	Method
-	Method
Squeeze	Method
Results	O
Comparison	O
with	O
YOLOv3	Method
We	O
compare	O
CornerNet	Method
-	Method
Squeeze	Method
with	O
one	O
of	O
the	O
widely	O
used	O
real	Method
-	Method
time	Method
detectors	Method
,	O
YOLOv3	Method
,	O
in	O
Tab	O
.	O

[	O
reference	O
]	O
.	O

YOLOv3	Method
is	O
implemented	O
in	O
C	Method
and	O
also	O
provides	O
a	O
Python	O
API	O
,	O
which	O
adds	O
a	O
10ms	O
overhead	O
to	O
the	O
inference	Metric
time	Metric
.	O

On	O
the	O
other	O
hand	O
,	O
CornerNet	Method
-	Method
Squeeze	Method
is	O
implemented	O
in	O
Python	Method
and	O
still	O
faster	O
than	O
the	O
C	Method
version	Method
of	O
YOLOv3	Method
.	O

There	O
is	O
a	O
potential	O
speed	O
-	O
up	O
if	O
we	O
implement	O
CornerNet	Method
-	Method
Squeeze	Method
purely	O
in	O
C.	O
Ablation	O
Study	O
We	O
study	O
each	O
major	O
change	O
in	O
CornerNet	Method
-	Method
Squeeze	Method
to	O
understand	O
its	O
contribution	O
to	O
the	O
inference	Metric
time	Metric
and	O
AP	Metric
.	O

To	O
conserve	O
GPU	O
resources	O
,	O
each	O
model	O
is	O
only	O
trained	O
for	O
250k	O
iterations	O
,	O
following	O
the	O
details	O
in	O
Sec	O
.	O

[	O
reference	O
]	O
.	O

With	O
the	O
extra	O
downsize	O
before	O
the	O
hourglass	Method
modules	Method
,	O
we	O
are	O
able	O
to	O
train	O
the	O
network	O
with	O
a	O
batch	O
size	O
of	O
55	O
(	O
Sec	O
.	O

[	O
reference	O
]	O
)	O
,	O
while	O
we	O
can	O
only	O
train	O
CornerNet	Method
with	O
a	O
batch	O
size	O
of	O
15	O
on	O
four	O
1080Ti	O
GPUs	O
.	O

We	O
just	O
provide	O
CornerNet	Method
APs	O
at	O
250k	O
in	O
Tab	O
.	O

[	O
reference	O
]	O
as	O
a	O
reference	O
.	O

In	O
CornerNet	Method
,	O
there	O
are	O
two	O
downsampling	Method
layers	Method
before	O
the	O
hourglass	Method
modules	Method
.	O

If	O
we	O
add	O
one	O
more	O
downsampling	Method
layer	Method
,	O
we	O
can	O
reduce	O
the	O
inference	Metric
time	Metric
from	O
114ms	O
to	O
46ms	O
.	O

Replacing	O
the	O
residual	O
blocks	O
with	O
fire	Method
modules	Method
saves	O
11ms	O
and	O
using	O
kernel	Method
in	O
predicting	Method
layers	Method
saves	O
another	O
2ms	O
without	O
any	O
loss	O
in	O
performance	O
.	O

Finally	O
,	O
we	O
use	O
transpose	Method
convolution	Method
as	O
it	O
improves	O
the	O
AP	Metric
by	O
0.5	O
%	O
with	O
a	O
small	O
increase	O
in	O
inference	Metric
time	Metric
.	O

subsection	O
:	O
CornerNet	Method
-	O
Squeeze	O
-	O
Saccade	O
Results	O
We	O
try	O
combining	O
CornerNet	Method
-	Method
Squeeze	Method
with	O
saccades	Method
to	O
further	O
improve	O
the	O
efficiency	O
.	O

However	O
,	O
we	O
find	O
that	O
CornerNet	Method
-	O
Squeeze	O
-	O
Saccade	O
does	O
not	O
outperform	O
CornerNet	Method
-	Method
Squeeze	Method
.	O

On	O
the	O
validation	O
set	O
,	O
CornerNet	Method
-	Method
Squeeze	Method
achieves	O
an	O
AP	Metric
of	O
34.4	O
%	O
,	O
while	O
CornerNet	Method
-	O
Squeeze	O
-	O
Saccade	O
with	O
achieves	O
32.7	O
%	O
.	O

If	O
we	O
replace	O
the	O
predicted	O
attention	O
map	O
with	O
the	O
ground	O
-	O
truth	O
attention	O
map	O
(	O
i.e.	O
the	O
object	O
locations	O
are	O
known	O
)	O
,	O
we	O
improve	O
the	O
AP	Metric
of	O
CornerNet	Method
-	O
Squeeze	O
-	O
Saccade	O
to	O
38.0	O
%	O
,	O
outperforming	O
CornerNet	Method
-	Method
Squeeze	Method
.	O

The	O
results	O
suggest	O
that	O
saccade	Method
can	O
only	O
help	O
if	O
the	O
attention	O
maps	O
are	O
sufficiently	O
accurate	O
.	O

Due	O
to	O
its	O
ultra	Method
-	Method
compact	Method
architecture	Method
,	O
CornerNet	Method
-	O
Squeeze	O
-	O
Saccade	O
does	O
not	O
have	O
enough	O
capacity	O
to	O
detect	O
objects	O
and	O
predict	O
attention	O
maps	O
simultaneously	O
.	O

Furthermore	O
,	O
CornerNet	Method
-	Method
Squeeze	Method
only	O
operates	O
on	O
single	O
scale	O
images	O
,	O
which	O
provides	O
much	O
less	O
room	O
for	O
CornerNet	Method
-	O
Squeeze	O
-	O
Saccade	O
to	O
save	O
.	O

CornerNet	Method
-	O
Squeeze	O
-	O
Saccade	O
may	O
process	O
more	O
number	O
of	O
pixels	O
than	O
CornerNet	Method
-	Method
Squeeze	Method
,	O
slowing	O
down	O
the	O
inference	Metric
time	Metric
.	O

subsection	O
:	O
COCO	Material
Test	O
AP	Metric
We	O
also	O
compare	O
CornerNet	Method
-	O
Lite	O
with	O
CornerNet	Method
and	O
YOLOv3	Method
on	O
COCO	Material
test	O
set	O
in	O
Tab	O
.	O

[	O
reference	O
]	O
.	O

CornerNet	Method
-	Method
Squeeze	Method
is	O
faster	O
and	O
more	O
accurate	O
than	O
YOLOv3	Method
.	O

CornerNet	Method
-	Method
Saccade	Method
is	O
more	O
accurate	O
than	O
CornerNet	Method
at	O
multi	O
-	O
scales	O
and	O
6	O
times	O
faster	O
.	O

section	O
:	O
Conclusions	O
We	O
propose	O
CornerNet	Method
-	O
Lite	O
which	O
is	O
a	O
combination	O
of	O
two	O
efficient	O
variant	O
of	O
CornerNet	Method
:	O
CornerNet	Method
-	Method
Saccade	Method
and	O
CornerNet	Method
-	Method
Squeeze	Method
.	O

Together	O
these	O
contributions	O
for	O
the	O
first	O
time	O
reveal	O
the	O
potential	O
of	O
keypoint	Task
-	Task
based	Task
detection	Task
to	O
be	O
useful	O
for	O
applications	O
requiring	O
processing	Task
efficiency	Task
.	O

Acknowledgements	O
This	O
work	O
is	O
partially	O
supported	O
by	O
a	O
DARPA	O
grant	O
FA8750	O
-	O
18	O
-	O
2	O
-	O
0019	O
and	O
an	O
IARPA	O
grant	O
D17PC00343	O
.	O

bibliography	O
:	O
References	O
